{
    "project": {
        "name": "EJSCharts",
        "description": "EJSChart",
        "version": "3.0.0",
        "url": ""
    },
    "files": {
        "src\\axis\\base\\Axis.es6": {
            "name": "src\\axis\\base\\Axis.es6",
            "modules": {},
            "classes": {
                "EJSC.Axis": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\axis\\LinearAxis.es6": {
            "name": "src\\axis\\LinearAxis.es6",
            "modules": {},
            "classes": {
                "EJSC.LinearAxis": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\axis\\LogarithmicAxis.es6": {
            "name": "src\\axis\\LogarithmicAxis.es6",
            "modules": {},
            "classes": {
                "EJSC.LogarithmicAxis": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\chart\\Chart.es6": {
            "name": "src\\chart\\Chart.es6",
            "modules": {},
            "classes": {
                "EJSC.Chart": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\class\\Inheritable.es6": {
            "name": "src\\class\\Inheritable.es6",
            "modules": {},
            "classes": {
                "EJSC.Inheritable": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\drawing\\engine\\base\\Engine.es6": {
            "name": "src\\drawing\\engine\\base\\Engine.es6",
            "modules": {},
            "classes": {
                "EJSC.Engine": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\drawing\\engine\\Canvas.es6": {
            "name": "src\\drawing\\engine\\Canvas.es6",
            "modules": {},
            "classes": {
                "EJSC.Canvas": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\drawing\\engine\\SVG.es6": {
            "name": "src\\drawing\\engine\\SVG.es6",
            "modules": {},
            "classes": {
                "EJSC.SVG": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\drawing\\engine\\VML.es6": {
            "name": "src\\drawing\\engine\\VML.es6",
            "modules": {},
            "classes": {
                "EJSC.VML": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\drawing\\Drawing.es6": {
            "name": "src\\drawing\\Drawing.es6",
            "modules": {},
            "classes": {
                "EJSC.Drawing": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\formatter\\DateFormatter.es6": {
            "name": "src\\formatter\\DateFormatter.es6",
            "modules": {},
            "classes": {
                "EJSC.DateFormatter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\formatter\\Formatter.es6": {
            "name": "src\\formatter\\Formatter.es6",
            "modules": {},
            "classes": {
                "EJSC.Formatter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\formatter\\NumberFormatter.es6": {
            "name": "src\\formatter\\NumberFormatter.es6",
            "modules": {},
            "classes": {
                "EJSC.NumberFormatter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\series\\base\\DataSeries.es6": {
            "name": "src\\series\\base\\DataSeries.es6",
            "modules": {},
            "classes": {
                "EJSC.DataSeries": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\series\\base\\PlotSeries.es6": {
            "name": "src\\series\\base\\PlotSeries.es6",
            "modules": {},
            "classes": {
                "EJSC.PlotSeries": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\series\\base\\Series.es6": {
            "name": "src\\series\\base\\Series.es6",
            "modules": {},
            "classes": {
                "EJSC.Series": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\series\\base\\XYSeries.es6": {
            "name": "src\\series\\base\\XYSeries.es6",
            "modules": {},
            "classes": {
                "EJSC.XYSeries": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\series\\AreaSeries.es6": {
            "name": "src\\series\\AreaSeries.es6",
            "modules": {},
            "classes": {
                "EJSC.AreaSeries": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\series\\BarSeries.es6": {
            "name": "src\\series\\BarSeries.es6",
            "modules": {},
            "classes": {
                "EJSC.BarSeries": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\series\\LineSeries.es6": {
            "name": "src\\series\\LineSeries.es6",
            "modules": {},
            "classes": {
                "EJSC.LineSeries": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\series\\ScatterSeries.es6": {
            "name": "src\\series\\ScatterSeries.es6",
            "modules": {},
            "classes": {
                "EJSC.ScatterSeries": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\util\\Array.es6": {
            "name": "src\\util\\Array.es6",
            "modules": {},
            "classes": {
                "$Array": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\util\\Element.es6": {
            "name": "src\\util\\Element.es6",
            "modules": {},
            "classes": {
                "$Element": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\util\\Number.es6": {
            "name": "src\\util\\Number.es6",
            "modules": {},
            "classes": {
                "$Number": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\util\\Object.es6": {
            "name": "src\\util\\Object.es6",
            "modules": {},
            "classes": {
                "$Object": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\util\\String.es6": {
            "name": "src\\util\\String.es6",
            "modules": {},
            "classes": {
                "$String": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\EJSC.es6": {
            "name": "src\\EJSC.es6",
            "modules": {
                "EJSC": 1
            },
            "classes": {
                "EJSC": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "EJSC": {
            "name": "EJSC",
            "submodules": {},
            "elements": {},
            "classes": {
                "EJSC.Axis": 1,
                "EJSC.LinearAxis": 1,
                "EJSC.LogarithmicAxis": 1,
                "EJSC.Chart": 1,
                "EJSC.Inheritable": 1,
                "EJSC.Engine": 1,
                "EJSC.Canvas": 1,
                "EJSC.SVG": 1,
                "EJSC.VML": 1,
                "EJSC.Drawing": 1,
                "EJSC.DateFormatter": 1,
                "EJSC.Formatter": 1,
                "EJSC.NumberFormatter": 1,
                "EJSC.DataSeries": 1,
                "EJSC.PlotSeries": 1,
                "EJSC.Series": 1,
                "EJSC.XYSeries": 1,
                "EJSC.AreaSeries": 1,
                "EJSC.BarSeries": 1,
                "EJSC.LineSeries": 1,
                "EJSC.ScatterSeries": 1,
                "$Array": 1,
                "$Element": 1,
                "$Number": 1,
                "$Object": 1,
                "$String": 1,
                "EJSC": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\EJSC.es6",
            "line": 9,
            "since": "1.0.0"
        }
    },
    "classes": {
        "EJSC.Axis": {
            "name": "EJSC.Axis",
            "shortname": "EJSC.Axis",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EJSC",
            "file": "src\\axis\\base\\Axis.es6",
            "line": 9,
            "description": "Holds the code common to all Axis types.",
            "extends": "EJSC.Inheritable",
            "is_constructor": 1,
            "access": "private",
            "tagname": "",
            "since": "@todo"
        },
        "EJSC.LinearAxis": {
            "name": "EJSC.LinearAxis",
            "shortname": "EJSC.LinearAxis",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EJSC",
            "file": "src\\axis\\LinearAxis.es6",
            "line": 7,
            "description": "LinearAxis is an axis using a linear scale.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "extends": "EJSC.Axis",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "The config options",
                    "type": "Object"
                }
            ],
            "since": "@todo"
        },
        "EJSC.LogarithmicAxis": {
            "name": "EJSC.LogarithmicAxis",
            "shortname": "EJSC.LogarithmicAxis",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EJSC",
            "file": "src\\axis\\LogarithmicAxis.es6",
            "line": 7,
            "description": "LogarithmicAxis is an axis using a logarithmic scale.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "extends": "EJSC.Axis",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "The config options",
                    "type": "Object"
                }
            ],
            "since": "@todo"
        },
        "EJSC.Chart": {
            "name": "EJSC.Chart",
            "shortname": "EJSC.Chart",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EJSC",
            "file": "src\\chart\\Chart.es6",
            "line": 8,
            "description": "Defines a basic chart that can display a variety of series types on it.\nA container must be defined in the config options in order for the chart to be rendered to the page.",
            "example": [
                "\n  ```\n  // Create a chart sending in the id of the container\n  let chart = new EJSC['sparkline'].Chart('chart-container', { ... });\n\n  // Create a chart sending in a reference to the container's element\n  let chart = new EJSC['sparkline'].Chart(document.getElementById('chart-container'), { ... });\n  ```"
            ],
            "extends": "EJSC.Drawing",
            "is_constructor": 1,
            "params": [
                {
                    "name": "container",
                    "description": "The container to render the chart in",
                    "type": "Element|String"
                },
                {
                    "name": "options",
                    "description": "The config options to apply to the chart",
                    "type": "Object",
                    "optional": true
                }
            ],
            "since": "@todo"
        },
        "EJSC.Inheritable": {
            "name": "EJSC.Inheritable",
            "shortname": "EJSC.Inheritable",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EJSC",
            "file": "src\\class\\Inheritable.es6",
            "line": 5,
            "description": "Base class from which all EJSC classes descend.",
            "access": "private",
            "tagname": "",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "The options to apply",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "{}"
                }
            ],
            "since": "@todo"
        },
        "EJSC.Engine": {
            "name": "EJSC.Engine",
            "shortname": "EJSC.Engine",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EJSC",
            "file": "src\\drawing\\engine\\base\\Engine.es6",
            "line": 4,
            "description": "Defines the abstract class for rendering engines for EJSCharts.",
            "access": "private",
            "tagname": "",
            "extends": "EJSC.Inheritable",
            "since": "@todo"
        },
        "EJSC.Canvas": {
            "name": "EJSC.Canvas",
            "shortname": "EJSC.Canvas",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EJSC",
            "file": "src\\drawing\\engine\\Canvas.es6",
            "line": 7,
            "description": "Defines the CANVAS rendering engine for EJSCharts.",
            "is_constructor": 1,
            "access": "private",
            "tagname": "",
            "extends": "EJSC.Engine",
            "since": "@todo"
        },
        "EJSC.SVG": {
            "name": "EJSC.SVG",
            "shortname": "EJSC.SVG",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EJSC",
            "file": "src\\drawing\\engine\\SVG.es6",
            "line": 6,
            "description": "Defines the SVG rendering engine for EJSCharts.",
            "is_constructor": 1,
            "access": "private",
            "tagname": "",
            "extends": "EJSC.Engine",
            "since": "@todo"
        },
        "EJSC.VML": {
            "name": "EJSC.VML",
            "shortname": "EJSC.VML",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EJSC",
            "file": "src\\drawing\\engine\\VML.es6",
            "line": 5,
            "description": "Defines the VML rendering engine for EJSCharts.",
            "is_constructor": 1,
            "access": "private",
            "tagname": "",
            "extends": "EJSC.Engine",
            "since": "@todo"
        },
        "EJSC.Drawing": {
            "name": "EJSC.Drawing",
            "shortname": "EJSC.Drawing",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EJSC",
            "file": "src\\drawing\\Drawing.es6",
            "line": 6,
            "description": "Defines a drawing that uses an engine (Canvas, SVG, VML, etc.) to draw on the page.",
            "example": [
                "\n  ```\n  // Create a chart sending in the id of the container\n  let chart = new EJSC['.sparkline'].Chart('#chart-container');\n  ```"
            ],
            "extends": "EJSC.Inheritable",
            "is_constructor": 1,
            "params": [
                {
                    "name": "The",
                    "description": "container element or id",
                    "type": "Element|String"
                },
                {
                    "name": "options",
                    "description": "The config options",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "{}"
                }
            ],
            "since": "@todo"
        },
        "EJSC.DateFormatter": {
            "name": "EJSC.DateFormatter",
            "shortname": "EJSC.DateFormatter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EJSC",
            "file": "src\\formatter\\DateFormatter.es6",
            "line": 6,
            "description": "Use this formatter when you want to display date values in your charts.",
            "example": [
                "\n  ```\n  // Create a basic DateFormatter\n  new EJSC.DateFormatter();\n  ```"
            ],
            "is_constructor": 1,
            "extends": "EJSC.Formatter",
            "params": [
                {
                    "name": "formatString",
                    "description": "The format string",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "The config options to apply",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "{}"
                }
            ],
            "since": "1.0.0"
        },
        "EJSC.Formatter": {
            "name": "EJSC.Formatter",
            "shortname": "EJSC.Formatter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EJSC",
            "file": "src\\formatter\\Formatter.es6",
            "line": 4,
            "description": "The top level Formatter class is used as a base for all label formatters.\nIt defines a format() method as a guide for descendants.\nThe format method is required to be overridden in all descendant classes in order to function properly when used with the chart classes.",
            "access": "private",
            "tagname": "",
            "is_constructor": 1,
            "extends": "EJSC.Inheritable",
            "params": [
                {
                    "name": "options",
                    "description": "The config options to apply",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "{}"
                }
            ],
            "since": "1.0.0"
        },
        "EJSC.NumberFormatter": {
            "name": "EJSC.NumberFormatter",
            "shortname": "EJSC.NumberFormatter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EJSC",
            "file": "src\\formatter\\NumberFormatter.es6",
            "line": 7,
            "description": "Use this formatter when you want more control over the display of numeric values in your charts.\nIt can be applied to the chart axis as well as series hints.",
            "example": [
                "\n  ```\n  // Create a basic NumberFormatter\n  new EJSC.NumberFormatter();\n\n  // Create a NumberFormatter that forces 2 decimals to be displayed\n  new EJSC.NumberFormatter({\n    minimumDecimals: 2\n  });\n  ```"
            ],
            "is_constructor": 1,
            "extends": "EJSC.Formatter",
            "params": [
                {
                    "name": "options",
                    "description": "The config options to apply",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "{}"
                }
            ],
            "since": "1.0.0"
        },
        "EJSC.DataSeries": {
            "name": "EJSC.DataSeries",
            "shortname": "EJSC.DataSeries",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "EJSC.XYSeries"
            ],
            "module": "EJSC",
            "file": "src\\series\\base\\DataSeries.es6",
            "line": 3,
            "description": "Defines a series that requires data.",
            "extends": "TODO:",
            "access": "private",
            "tagname": "",
            "is_constructor": 1,
            "params": [
                {
                    "name": "data",
                    "description": "The data array",
                    "type": "Array"
                },
                {
                    "name": "options",
                    "description": "The config options",
                    "type": "Object"
                }
            ],
            "since": "@todo"
        },
        "EJSC.PlotSeries": {
            "name": "EJSC.PlotSeries",
            "shortname": "EJSC.PlotSeries",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EJSC",
            "file": "src\\series\\base\\PlotSeries.es6",
            "line": 6,
            "description": "Defines a series that will plot its data using the chart's axes.",
            "extends": "EJSC.Series",
            "access": "private",
            "tagname": "",
            "since": "@todo"
        },
        "EJSC.Series": {
            "name": "EJSC.Series",
            "shortname": "EJSC.Series",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EJSC",
            "file": "src\\series\\base\\Series.es6",
            "line": 5,
            "description": "Holds all of the common code to all of the series.",
            "access": "private",
            "tagname": "",
            "extends": "EJSC.Inheritable",
            "since": "@todo"
        },
        "EJSC.XYSeries": {
            "name": "EJSC.XYSeries",
            "shortname": "EJSC.XYSeries",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EJSC",
            "file": "src\\series\\base\\XYSeries.es6",
            "line": 5,
            "description": "Holds the common properties of series types that use XY data.",
            "extends": "EJSC.PlotSeries",
            "uses": [
                "EJSC.DataSeries"
            ],
            "access": "private",
            "tagname": "",
            "since": "@todo"
        },
        "EJSC.AreaSeries": {
            "name": "EJSC.AreaSeries",
            "shortname": "EJSC.AreaSeries",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EJSC",
            "file": "src\\series\\AreaSeries.es6",
            "line": 7,
            "description": "AreaSeries is rendered by drawing a line from point to point and then filling the area defined.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "extends": "EJSC.LineSeries",
            "is_constructor": 1,
            "params": [
                {
                    "name": "data",
                    "description": "The data array",
                    "type": "Array"
                },
                {
                    "name": "options",
                    "description": "The config options",
                    "type": "Object"
                }
            ],
            "since": "@todo"
        },
        "EJSC.BarSeries": {
            "name": "EJSC.BarSeries",
            "shortname": "EJSC.BarSeries",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EJSC",
            "file": "src\\series\\BarSeries.es6",
            "line": 8,
            "description": "BarSeries renders its points as vertical or horizontal bars which are fixed to a baseline.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "extends": "EJSC.ScatterSeries",
            "is_constructor": 1,
            "params": [
                {
                    "name": "data",
                    "description": "The data array",
                    "type": "Array"
                },
                {
                    "name": "options",
                    "description": "The config options",
                    "type": "Object"
                }
            ],
            "since": "@todo"
        },
        "EJSC.LineSeries": {
            "name": "EJSC.LineSeries",
            "shortname": "EJSC.LineSeries",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EJSC",
            "file": "src\\series\\LineSeries.es6",
            "line": 7,
            "description": "LineSeries is rendered by drawing a line from point to point.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "extends": "EJSC.ScatterSeries",
            "is_constructor": 1,
            "params": [
                {
                    "name": "data",
                    "description": "The data array",
                    "type": "Array"
                },
                {
                    "name": "options",
                    "description": "The config options",
                    "type": "Object"
                }
            ],
            "since": "@todo"
        },
        "EJSC.ScatterSeries": {
            "name": "EJSC.ScatterSeries",
            "shortname": "EJSC.ScatterSeries",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EJSC",
            "file": "src\\series\\ScatterSeries.es6",
            "line": 7,
            "description": "ScatterSeries is rendered by drawing a styled point for each x,y coordinate in the dataset.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "extends": "EJSC.XYSeries",
            "is_constructor": 1,
            "params": [
                {
                    "name": "data",
                    "description": "The data array",
                    "type": "Array"
                },
                {
                    "name": "options",
                    "description": "The config options",
                    "type": "Object"
                }
            ],
            "since": "@todo"
        },
        "$Array": {
            "name": "$Array",
            "shortname": "$Array",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EJSC",
            "file": "src\\util\\Array.es6",
            "line": 4,
            "access": "private",
            "tagname": ""
        },
        "$Element": {
            "name": "$Element",
            "shortname": "$Element",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EJSC",
            "file": "src\\util\\Element.es6",
            "line": 5,
            "access": "private",
            "tagname": ""
        },
        "$Number": {
            "name": "$Number",
            "shortname": "$Number",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EJSC",
            "file": "src\\util\\Number.es6",
            "line": 5,
            "access": "private",
            "tagname": ""
        },
        "$Object": {
            "name": "$Object",
            "shortname": "$Object",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EJSC",
            "file": "src\\util\\Object.es6",
            "line": 5,
            "access": "private",
            "tagname": ""
        },
        "$String": {
            "name": "$String",
            "shortname": "$String",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EJSC",
            "file": "src\\util\\String.es6",
            "line": 2,
            "access": "private",
            "tagname": ""
        },
        "EJSC": {
            "name": "EJSC",
            "shortname": "EJSC",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EJSC",
            "namespace": "",
            "file": "src\\EJSC.es6",
            "line": 9,
            "description": "Top level namespace for all classes and variables used by the Emprise JavaScript Charts package.\nUse of this namespace prevents variable name collisions with other available JavaScript packages.",
            "static": 1,
            "since": "1.0.0"
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "src\\axis\\base\\Axis.es6",
            "line": 20,
            "description": "Defines the border of the axis.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "attribute",
            "name": "border",
            "type": "Object",
            "params": [
                {
                    "name": "border.style",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "border.style.color",
                    "description": "The color of the border in rgb, rgba, or hex form (Default: 'rgb(200, 200, 200)')",
                    "type": "String"
                },
                {
                    "name": "border.style.width",
                    "description": "The width of the border (Default: 1)",
                    "type": "Integer"
                },
                {
                    "name": "border.visible",
                    "description": "Whether to show the border or not (Default: true)",
                    "type": "Boolean"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Axis"
        },
        {
            "file": "src\\axis\\base\\Axis.es6",
            "line": 55,
            "description": "Defines the caption of the axis.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "attribute",
            "name": "caption",
            "type": "Object",
            "params": [
                {
                    "name": "caption.style",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "caption.style.fillStyle",
                    "description": "The color of the caption (Default: 'rgb(100, 100, 100)')",
                    "type": "String"
                },
                {
                    "name": "caption.style.font",
                    "description": "The font of the caption (Default: 'Bold 11px Verdana')",
                    "type": "String"
                },
                {
                    "name": "caption.style.textAlign",
                    "description": "The horizontal alignment of the caption (Default: 'center') (Values: 'left', 'center', 'right')",
                    "type": "String"
                },
                {
                    "name": "caption.style.textBaseline",
                    "description": "The vertical baseline of the caption (Default: 'middle') (Values: 'top', 'middle', 'bottom')",
                    "type": "String"
                },
                {
                    "name": "caption.visible",
                    "description": "If the caption should be displayed (Default: true)",
                    "type": "Boolean"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Axis"
        },
        {
            "file": "src\\axis\\base\\Axis.es6",
            "line": 91,
            "description": "Defines the extremes of the axis.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "attribute",
            "name": "extremes",
            "type": "Object",
            "params": [
                {
                    "name": "extremes.max",
                    "description": "The max extreme (Default: null)",
                    "type": "Number"
                },
                {
                    "name": "extremes.min",
                    "description": "The min extreme (Default: null)",
                    "type": "Number"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Axis"
        },
        {
            "file": "src\\axis\\base\\Axis.es6",
            "line": 125,
            "description": "Defines the grid of the axis.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "attribute",
            "name": "grid",
            "type": "Object",
            "params": [
                {
                    "name": "grid.style",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "grid.style.lineDash",
                    "description": "The line dash of the zero plane (Default: [3, 3])",
                    "type": "Array"
                },
                {
                    "name": "grid.style.lineWidth",
                    "description": "The width of the zero plane (Default: 1)",
                    "type": "Integer"
                },
                {
                    "name": "grid.style.strokeStyle",
                    "description": "The color of the zero plane (Default: 'rgb(230, 230, 230)')",
                    "type": "String"
                },
                {
                    "name": "grid.visible",
                    "description": "If the grid should be displayed (Default: true)",
                    "type": "Boolean"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Axis"
        },
        {
            "file": "src\\axis\\base\\Axis.es6",
            "line": 161,
            "description": "Defines the major ticks to be displayed on the axis.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "attribute",
            "name": "majorTicks",
            "type": "Object",
            "params": [
                {
                    "name": "majorTicks.size",
                    "description": "The size of the major ticks (Default: 5)",
                    "type": "Integer"
                },
                {
                    "name": "majorTicks.style",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "majorTicks.style.lineWidth",
                    "description": "The width of the major ticks (Default: 1)",
                    "type": "Integer"
                },
                {
                    "name": "majorTicks.style.strokeStyle",
                    "description": "The color of the major ticks (Default: 'rgb(200, 200, 200)')",
                    "type": "String"
                },
                {
                    "name": "majorTicks.visible",
                    "description": "If the major ticks should be displayed (Default: true)",
                    "type": "Boolean"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Axis"
        },
        {
            "file": "src\\axis\\base\\Axis.es6",
            "line": 196,
            "description": "Defines the padding between the ends of the axis and the start and end of the data displayed when zoomed out.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "attribute",
            "name": "padding",
            "type": "Integer",
            "default": "5",
            "since": "@todo",
            "class": "EJSC.Axis"
        },
        {
            "file": "src\\axis\\base\\Axis.es6",
            "line": 226,
            "description": "Defines if the order of the ticks on the axis are reversed or not.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "attribute",
            "name": "reverse",
            "type": "Boolean",
            "default": "false",
            "since": "@todo",
            "class": "EJSC.Axis"
        },
        {
            "file": "src\\axis\\base\\Axis.es6",
            "line": 257,
            "description": "Defines the size (height or width) of the axis.\nIf left null, default values will be used.",
            "itemtype": "property",
            "name": "size",
            "type": "Integer",
            "default": "null",
            "since": "@todo",
            "class": "EJSC.Axis"
        },
        {
            "file": "src\\axis\\base\\Axis.es6",
            "line": 285,
            "description": "Defines if the axis is visible or not.",
            "itemtype": "attribute",
            "name": "visible",
            "type": "Boolean",
            "default": "true",
            "since": "@todo",
            "class": "EJSC.Axis"
        },
        {
            "file": "src\\axis\\base\\Axis.es6",
            "line": 312,
            "description": "Defines the zero plane of the axis.",
            "itemtype": "property",
            "name": "zeroPlane",
            "type": "Object",
            "since": "@todo",
            "class": "EJSC.Axis",
            "subprops": [
                {
                    "name": "coordinate",
                    "description": "The coordinate of the zero plane (Default: 0)",
                    "type": "Number"
                },
                {
                    "name": "style",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "style.lineWidth",
                    "description": "The width of the zero plane (Default: 1)",
                    "type": "Integer"
                },
                {
                    "name": "style.strokeStyle",
                    "description": "The color of the zero plane (Default: 'rgb(170, 170, 170)')",
                    "type": "String"
                },
                {
                    "name": "style.visible",
                    "description": "If the zero plane is visible (Default: false)",
                    "type": "Boolean"
                }
            ]
        },
        {
            "file": "src\\axis\\base\\Axis.es6",
            "line": 342,
            "description": "Defines the current zoom of the axis.",
            "itemtype": "property",
            "name": "zoom",
            "type": "Object",
            "since": "@todo",
            "class": "EJSC.Axis",
            "subprops": [
                {
                    "name": "min",
                    "description": "The min coordinate (Default: null)",
                    "type": "Number"
                },
                {
                    "name": "max",
                    "description": "The max coordinate (Default: null)",
                    "type": "Number"
                }
            ]
        },
        {
            "file": "src\\axis\\base\\Axis.es6",
            "line": 368,
            "description": "Holds a reference to the owner chart.",
            "itemtype": "property",
            "name": "chart",
            "type": "EJSC['sparkline'].Chart",
            "access": "protected",
            "tagname": "",
            "default": "null",
            "since": "@todo",
            "class": "EJSC.Axis"
        },
        {
            "file": "src\\axis\\base\\Axis.es6",
            "line": 382,
            "description": "Holds the dimensions for the draw area of this axis.",
            "itemtype": "property",
            "name": "drawArea",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "since": "@todo",
            "class": "EJSC.Axis",
            "subprops": [
                {
                    "name": "bottom",
                    "description": "The bottom coordinate of the draw area (Default: null)",
                    "type": "Number"
                },
                {
                    "name": "left",
                    "description": "The left coordinate of the draw area (Default: null)",
                    "type": "Number"
                },
                {
                    "name": "right",
                    "description": "The right coordinate of the draw area (Default: null)",
                    "type": "Number"
                },
                {
                    "name": "top",
                    "description": "The top coordinate of the draw area (Default: null)",
                    "type": "Number"
                }
            ]
        },
        {
            "file": "src\\axis\\base\\Axis.es6",
            "line": 394,
            "description": "Holds the orientation of the axis.\n\nValues: 'horizontal', 'vertical'",
            "itemtype": "property",
            "name": "orientation",
            "type": "String",
            "access": "private",
            "tagname": "",
            "default": "null",
            "since": "@todo",
            "class": "EJSC.Axis"
        },
        {
            "file": "src\\axis\\base\\Axis.es6",
            "line": 405,
            "description": "Holds the current scale to convert pixels to points.",
            "itemtype": "property",
            "name": "scale",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "default": "null",
            "since": "@todo",
            "class": "EJSC.Axis"
        },
        {
            "file": "src\\axis\\base\\Axis.es6",
            "line": 414,
            "description": "Holds the side of the axis.\n\nValues: 'left', 'top', 'right', 'bottom'",
            "itemtype": "property",
            "name": "side",
            "type": "String",
            "access": "private",
            "tagname": "",
            "default": "null",
            "since": "@todo",
            "class": "EJSC.Axis"
        },
        {
            "file": "src\\axis\\base\\Axis.es6",
            "line": 502,
            "description": "Calculates the draw area for the axis.",
            "itemtype": "method",
            "name": "calculateDrawArea",
            "access": "private",
            "tagname": "",
            "since": "@todo",
            "class": "EJSC.Axis"
        },
        {
            "file": "src\\axis\\base\\Axis.es6",
            "line": 562,
            "description": "Calculates the extremes for the axis.",
            "itemtype": "method",
            "name": "calculateExtremes",
            "access": "private",
            "tagname": "",
            "since": "@todo",
            "class": "EJSC.Axis"
        },
        {
            "file": "src\\axis\\base\\Axis.es6",
            "line": 573,
            "description": "Calculates the scale for the axis.",
            "itemtype": "method",
            "name": "calculateScale",
            "access": "private",
            "tagname": "",
            "since": "@todo",
            "class": "EJSC.Axis"
        },
        {
            "file": "src\\axis\\base\\Axis.es6",
            "line": 597,
            "description": "Calculates the axis' ticks based on the attached series' data.",
            "itemtype": "method",
            "name": "calculateTicks",
            "access": "private",
            "tagname": "",
            "since": "@todo",
            "class": "EJSC.Axis"
        },
        {
            "file": "src\\axis\\base\\Axis.es6",
            "line": 609,
            "description": "Converts a linear point to a logarithmic point.",
            "itemtype": "method",
            "name": "convertLinearToPoint",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "linear",
                    "description": "The linear point",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The logarithmic point",
                "type": "Number"
            },
            "since": "@todo",
            "class": "EJSC.Axis"
        },
        {
            "file": "src\\axis\\base\\Axis.es6",
            "line": 623,
            "description": "Converts from chart pixel to point.",
            "itemtype": "method",
            "name": "convertPixelToPoint",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "pixel",
                    "description": "The pixel to convert",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The point",
                "type": "Number"
            },
            "since": "@todo",
            "class": "EJSC.Axis"
        },
        {
            "file": "src\\axis\\base\\Axis.es6",
            "line": 637,
            "description": "Converts a logarithmic point to a linear point.",
            "itemtype": "method",
            "name": "convertPointToLinear",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "point",
                    "description": "The logarithmic point",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The linear point",
                "type": "Number"
            },
            "since": "@todo",
            "class": "EJSC.Axis"
        },
        {
            "file": "src\\axis\\base\\Axis.es6",
            "line": 651,
            "description": "Converts from chart point to pixel.",
            "itemtype": "method",
            "name": "convertPointToPixel",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "point",
                    "description": "The point to convert",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The pixel",
                "type": "Number"
            },
            "since": "@todo",
            "class": "EJSC.Axis"
        },
        {
            "file": "src\\axis\\base\\Axis.es6",
            "line": 665,
            "description": "Draws the axis.",
            "itemtype": "method",
            "name": "draw",
            "access": "private",
            "tagname": "",
            "since": "@todo",
            "class": "EJSC.Axis"
        },
        {
            "file": "src\\axis\\base\\Axis.es6",
            "line": 728,
            "description": "Draws the axis' border.",
            "itemtype": "method",
            "name": "drawBorder",
            "access": "private",
            "tagname": "",
            "since": "@todo",
            "class": "EJSC.Axis"
        },
        {
            "file": "src\\axis\\base\\Axis.es6",
            "line": 798,
            "description": "Draws the axis' caption.",
            "itemtype": "method",
            "name": "drawCaption",
            "access": "private",
            "tagname": "",
            "since": "@todo",
            "class": "EJSC.Axis"
        },
        {
            "file": "src\\axis\\base\\Axis.es6",
            "line": 855,
            "description": "Draws the axis' grid.",
            "itemtype": "method",
            "name": "drawGrid",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "ticks",
                    "description": "The current list of ticks",
                    "type": "Array"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Axis"
        },
        {
            "file": "src\\axis\\base\\Axis.es6",
            "line": 903,
            "description": "Draws the axis' tick captions.",
            "itemtype": "method",
            "name": "drawMajorTickCaptions",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "ticks",
                    "description": "The current list of ticks",
                    "type": "Array"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Axis"
        },
        {
            "file": "src\\axis\\base\\Axis.es6",
            "line": 974,
            "description": "Draws the axis' major ticks.",
            "itemtype": "method",
            "name": "drawMajorTicks",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "ticks",
                    "description": "The current list of ticks",
                    "type": "Array"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Axis"
        },
        {
            "file": "src\\axis\\base\\Axis.es6",
            "line": 1037,
            "description": "Draws the axis' zero plane.",
            "itemtype": "method",
            "name": "drawZeroPlane",
            "access": "private",
            "tagname": "",
            "since": "@todo",
            "class": "EJSC.Axis"
        },
        {
            "file": "src\\axis\\base\\Axis.es6",
            "line": 1087,
            "description": "Returns the current zoom (plus given spacing) of the axis.",
            "itemtype": "method",
            "name": "getCurrentZoom",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "spacing",
                    "description": "The additional spacing to include",
                    "type": "Integer"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Axis"
        },
        {
            "file": "src\\axis\\base\\Axis.es6",
            "line": 1109,
            "description": "Returns the current offset size of the axis.",
            "itemtype": "method",
            "name": "getOffsetSize",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "The offset size of the axis",
                "type": "Integer"
            },
            "since": "@todo",
            "class": "EJSC.Axis"
        },
        {
            "file": "src\\axis\\base\\Axis.es6",
            "line": 1122,
            "description": "Returns the list of visible series attached to the axis.",
            "itemtype": "method",
            "name": "getVisibleSeries",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "The visible series",
                "type": "Array"
            },
            "since": "@todo",
            "class": "EJSC.Axis"
        },
        {
            "file": "src\\axis\\base\\Axis.es6",
            "line": 1138,
            "description": "Returns if the axis has currently visible series.",
            "itemtype": "method",
            "name": "hasVisibleSeries",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "If there are visible series",
                "type": "Boolean"
            },
            "since": "@todo",
            "class": "EJSC.Axis"
        },
        {
            "file": "src\\axis\\base\\Axis.es6",
            "line": 1151,
            "description": "Determines if the axis is currently visible (needs to be drawn).",
            "itemtype": "method",
            "name": "isVisible",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "If the axis is currently visible",
                "type": "Boolean"
            },
            "since": "@todo",
            "class": "EJSC.Axis"
        },
        {
            "file": "src\\axis\\base\\Axis.es6",
            "line": 1164,
            "description": "Links the series to its owner chart.",
            "itemtype": "method",
            "name": "prepare",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "chart",
                    "description": "The owner chart",
                    "type": "EJSC.Chart"
                },
                {
                    "name": "side",
                    "description": "The axis' side",
                    "type": "String"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Axis"
        },
        {
            "file": "src\\axis\\base\\Axis.es6",
            "line": 1187,
            "description": "Fires when a property of the class has changed.",
            "itemtype": "method",
            "name": "update",
            "access": "private",
            "tagname": "",
            "since": "@todo",
            "class": "EJSC.Axis"
        },
        {
            "file": "src\\axis\\base\\Axis.es6",
            "line": 1200,
            "description": "Defines the default values for orientation or axes.",
            "itemtype": "property",
            "name": "orientations",
            "type": "Object",
            "static": 1,
            "access": "private",
            "tagname": "",
            "since": "@todo",
            "class": "EJSC.Axis",
            "subprops": [
                {
                    "name": "sizes.bottom",
                    "description": "(Default: 'horizontal')",
                    "type": "Number"
                },
                {
                    "name": "sizes.left",
                    "description": "(Default: 'vertical')",
                    "type": "Number"
                },
                {
                    "name": "sizes.right",
                    "description": "(Default: 'vertical')",
                    "type": "Number"
                },
                {
                    "name": "sizes.top",
                    "description": "(Default: 'horizontal)",
                    "type": "Number"
                }
            ]
        },
        {
            "file": "src\\axis\\base\\Axis.es6",
            "line": 1219,
            "description": "Defines the default values for size of axes.",
            "itemtype": "property",
            "name": "sizes",
            "type": "Object",
            "static": 1,
            "access": "private",
            "tagname": "",
            "since": "@todo",
            "class": "EJSC.Axis",
            "subprops": [
                {
                    "name": "horizontal",
                    "description": "(Default: 45)",
                    "type": "Number"
                },
                {
                    "name": "vertical",
                    "description": "(Default: 70)",
                    "type": "Number"
                }
            ]
        },
        {
            "file": "src\\axis\\LinearAxis.es6",
            "line": 23,
            "description": "Calculates where a line segment between two given points croses the axis at a given coordinate.",
            "itemtype": "method",
            "name": "calculateCross",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "point1",
                    "description": "The first point",
                    "type": "Object"
                },
                {
                    "name": "point2",
                    "description": "The second point",
                    "type": "Object"
                },
                {
                    "name": "coordinate",
                    "description": "The coordinate to cross at",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The crossed coordinates",
                "type": "Object"
            },
            "since": "@todo",
            "class": "EJSC.LinearAxis"
        },
        {
            "file": "src\\axis\\LinearAxis.es6",
            "line": 57,
            "description": "Calculates the extremes for the axis.",
            "itemtype": "method",
            "name": "calculateExtremes",
            "access": "private",
            "tagname": "",
            "since": "@todo",
            "class": "EJSC.LinearAxis"
        },
        {
            "file": "src\\axis\\LinearAxis.es6",
            "line": 117,
            "description": "Calculates the axis' ticks based on the attached series' data.",
            "itemtype": "method",
            "name": "calculateTicks",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "The list of ticks",
                "type": "Array"
            },
            "since": "@todo",
            "class": "EJSC.LinearAxis"
        },
        {
            "file": "src\\axis\\LinearAxis.es6",
            "line": 162,
            "description": "Converts from chart pixel to point.",
            "itemtype": "method",
            "name": "convertPixelToPoint",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "pixel",
                    "description": "The pixel to convert",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The point",
                "type": "Number"
            },
            "since": "@todo",
            "class": "EJSC.LinearAxis"
        },
        {
            "file": "src\\axis\\LinearAxis.es6",
            "line": 225,
            "description": "Converts from chart point to pixel.",
            "itemtype": "method",
            "name": "convertPointToPixel",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "point",
                    "description": "The point to convert",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The pixel",
                "type": "Number"
            },
            "since": "@todo",
            "class": "EJSC.LinearAxis"
        },
        {
            "file": "src\\axis\\LogarithmicAxis.es6",
            "line": 22,
            "description": "Defines the base for the logarithmic scale.",
            "itemtype": "attribute",
            "name": "base",
            "type": "Number",
            "default": "10",
            "since": "@todo",
            "class": "EJSC.LogarithmicAxis"
        },
        {
            "file": "src\\axis\\LogarithmicAxis.es6",
            "line": 47,
            "itemtype": "property",
            "name": "logPoints",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "since": "@todo",
            "class": "EJSC.LogarithmicAxis",
            "subprops": [
                {
                    "name": "maxPositive",
                    "description": "(Default: null)",
                    "type": "Number"
                },
                {
                    "name": "minPositive",
                    "description": "(Default: null)",
                    "type": "Number"
                },
                {
                    "name": "zeroValue",
                    "description": "(Default: null)",
                    "type": "Number"
                },
                {
                    "name": "maxNegative",
                    "description": "(Default: null)",
                    "type": "Number"
                },
                {
                    "name": "minNegative",
                    "description": "(Default: null)",
                    "type": "Number"
                }
            ]
        },
        {
            "file": "src\\axis\\LogarithmicAxis.es6",
            "line": 78,
            "description": "Calculates the extremes for the axis.",
            "itemtype": "method",
            "name": "calculateExtremes",
            "access": "private",
            "tagname": "",
            "since": "@todo",
            "class": "EJSC.LogarithmicAxis"
        },
        {
            "file": "src\\axis\\LogarithmicAxis.es6",
            "line": 189,
            "description": "Calculates the axis' ticks based on the attached series' data.",
            "itemtype": "method",
            "name": "calculateTicks",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "The list of ticks",
                "type": "Array"
            },
            "since": "@todo",
            "class": "EJSC.LogarithmicAxis"
        },
        {
            "file": "src\\axis\\LogarithmicAxis.es6",
            "line": 216,
            "description": "Converts a linear point to a logarithmic point.",
            "itemtype": "method",
            "name": "convertLinearToPoint",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "linear",
                    "description": "The linear point",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The logarithmic point",
                "type": "Number"
            },
            "since": "@todo",
            "class": "EJSC.LogarithmicAxis"
        },
        {
            "file": "src\\axis\\LogarithmicAxis.es6",
            "line": 261,
            "description": "Converts a chart pixel to a logarithmic point.",
            "itemtype": "method",
            "name": "convertPixelToPoint",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "pixel",
                    "description": "The chart pixel",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The logarithmic point",
                "type": "Number"
            },
            "since": "@todo",
            "class": "EJSC.LogarithmicAxis"
        },
        {
            "file": "src\\axis\\LogarithmicAxis.es6",
            "line": 325,
            "description": "Converts a logarithmic point to a linear point.",
            "itemtype": "method",
            "name": "convertPointToLinear",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "point",
                    "description": "The logarithmic point",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The linear point",
                "type": "Number"
            },
            "since": "@todo",
            "class": "EJSC.LogarithmicAxis"
        },
        {
            "file": "src\\axis\\LogarithmicAxis.es6",
            "line": 370,
            "description": "Converts a logarithmic point to a chart pixel.",
            "itemtype": "method",
            "name": "convertPointToPixel",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "point",
                    "description": "The logarithmic point",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The chart pixel",
                "type": "Number"
            },
            "since": "@todo",
            "class": "EJSC.LogarithmicAxis"
        },
        {
            "file": "src\\axis\\LogarithmicAxis.es6",
            "line": 431,
            "description": "Converts a logarithmic point to a power of the base.",
            "itemtype": "method",
            "name": "convertPointToPower",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "point",
                    "description": "The logarithmic point",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The poser of the base",
                "type": "Number"
            },
            "since": "@todo",
            "class": "EJSC.LogarithmicAxis"
        },
        {
            "file": "src\\axis\\LogarithmicAxis.es6",
            "line": 445,
            "description": "Converts a logarithmic point to a power of the base.",
            "itemtype": "method",
            "name": "convertPowerToPoint",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "power",
                    "description": "The poser of the base",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The logarithmic point",
                "type": "Number"
            },
            "since": "@todo",
            "class": "EJSC.LogarithmicAxis"
        },
        {
            "file": "src\\chart\\Chart.es6",
            "line": 30,
            "description": "Defines the bottom axis for the chart.",
            "example": [
                "\n  ```\n  // Create a chart in the element with the id 'chart-container'\n  let chart = new EJSC['sparkline'].Chart('chart-container', {\n    // Define the bottom axis by sending in the config options\n    axisBottom: { ... }}\n  });\n\n  // Create a chart in the element with the id 'chart-container'\n  let chart = new EJSC['sparkline'].Chart('chart-container', {\n    // Define the bottom axis by sending in an Axis class\n    axisBottom: new EJSC['sparkline'].LinearAxis({ ... })\n  });\n  ```"
            ],
            "itemtype": "attribute",
            "name": "axisBottom",
            "type": "EJSC['sparkline'].Axis|Object",
            "default": "null",
            "since": "@todo",
            "class": "EJSC.Chart"
        },
        {
            "file": "src\\chart\\Chart.es6",
            "line": 80,
            "description": "Defines the left axis for the chart.",
            "example": [
                "\n  ```\n  // Create a chart in the element with the id 'chart-container'\n  let chart = new EJSC['sparkline'].Chart('chart-container', {\n    // Define the left axis by sending in the config options\n    axisLeft: { ... }\n  });\n\n  // Create a chart in the element with the id 'chart-container'\n  let chart = new EJSC['sparkline'].Chart('chart-container', {\n    // Define the left axis by sending in an Axis class\n    axisLeft: new EJSC['sparkline'].LinearAxis({ ... })\n  });\n  ```"
            ],
            "itemtype": "attribute",
            "name": "axisLeft",
            "type": "EJSC['sparkline'].Axis|Object",
            "default": "null",
            "since": "@todo",
            "class": "EJSC.Chart"
        },
        {
            "file": "src\\chart\\Chart.es6",
            "line": 130,
            "description": "Defines the right axis for the chart.",
            "example": [
                "\n  ```\n  // Create a chart in the element with the id 'chart-container'\n  let chart = new EJSC['sparkline'].Chart('chart-container', {\n    // Define the right axis by sending in the config options\n    axisRight: { ... }\n  });\n\n  // Create a chart in the element with the id 'chart-container'\n  let chart = new EJSC['sparkline'].Chart('chart-container', {\n    // Define the right axis by sending in an Axis class\n    axisRight: new EJSC['sparkline'].LinearAxis({ ... })\n  });\n  ```"
            ],
            "itemtype": "attribute",
            "name": "axisRight",
            "type": "EJSC['sparkline'].Axis|Object",
            "default": "null",
            "since": "@todo",
            "class": "EJSC.Chart"
        },
        {
            "file": "src\\chart\\Chart.es6",
            "line": 180,
            "description": "Defines the top axis for the chart.",
            "example": [
                "\n  ```\n  // Create a chart in the element with the id 'chart-container'\n  let chart = new EJSC['sparkline'].Chart('chart-container', {\n    // Define the top axis by sending in the config options\n    axisTop: { ... }\n  });\n\n  // Create a chart in the element with the id 'chart-container'\n  let chart = new EJSC['sparkline'].Chart('chart-container', {\n    // Define the top axis by sending in an Axis class\n    axisTop: new EJSC['sparkline'].LinearAxis({ ... })\n  });\n  ```"
            ],
            "itemtype": "attribute",
            "name": "axisTop",
            "type": "EJSC['sparkline'].Axis|Object",
            "default": "null",
            "since": "@todo",
            "class": "EJSC.Chart"
        },
        {
            "file": "src\\chart\\Chart.es6",
            "line": 229,
            "description": "Defines the color of the chart area background.",
            "example": [
                "\n  ```\n  // Create a chart in the element with the id 'chart-container'\n  let chart = new EJSC['sparkline'].Chart('chart-container', {\n    // Set the background color of the chart to white (using hex)\n    background: '#ffffff'\n  });\n  ```"
            ],
            "itemtype": "attribute",
            "name": "String background",
            "default": "'rgba(0, 0, 0, 0)'",
            "since": "@todo",
            "class": "EJSC.Chart"
        },
        {
            "file": "src\\chart\\Chart.es6",
            "line": 263,
            "description": "Defines the default colors to apply to new series.",
            "example": [
                "\n  ```\n  // Create a chart in the element with the id 'chart-container'\n  let chart = new EJSC['sparkline'].Chart('chart-container', {\n    // Define the default colors as [red, green, blue]\n    colors: ['rgb(255, 0, 0)', 'rgb(0, 255, 0)', 'rgb(0, 0, 255)']\n  });\n  ```"
            ],
            "itemtype": "attribute",
            "name": "colors",
            "type": "Array",
            "default": "[...]",
            "since": "@todo",
            "class": "EJSC.Chart"
        },
        {
            "file": "src\\chart\\Chart.es6",
            "line": 298,
            "description": "Defines the title to display at the top of the chart.",
            "example": [
                "\n  ```\n  // Create a chart in the element with the id 'chart-container'\n  let chart = new EJSC['sparkline'].Chart('chart-container', {\n    // Define the title as 'My Chart'\n    title: 'My Chart'\n  });\n  ```"
            ],
            "itemtype": "attribute",
            "name": "title",
            "type": "String",
            "default": "'Emprise JavaScript Charts'",
            "since": "@todo",
            "class": "EJSC.Chart"
        },
        {
            "file": "src\\chart\\Chart.es6",
            "line": 334,
            "description": "Defines the styles for the titlebar.",
            "example": [
                "\n  ```\n  // Create a chart in the element with the id 'chart-container'\n  let chart = new EJSC['sparkline'].Chart('chart-container', {\n    // Center align the title\n    titlebar: {\n      align: 'center'\n    }\n  }};\n  ```"
            ],
            "itemtype": "attribute",
            "name": "titlebar",
            "type": "Object",
            "params": [
                {
                    "name": "titlebar.align",
                    "description": "The horizontal alignment of the text in the titlebar (Default: 'left')",
                    "type": "String"
                },
                {
                    "name": "titlebar.baseline",
                    "description": "The vertical alignment of the text in the titlebar (Default: 'middle')",
                    "type": "String"
                },
                {
                    "name": "titlebar.color",
                    "description": "The color of the text in the titlebar (Default: 'rgb(102, 102, 102)')",
                    "type": "String"
                },
                {
                    "name": "titlebar.font",
                    "description": "The font of the text in the titlebar (Default: 'Bold 11px Verdana')",
                    "type": "String"
                },
                {
                    "name": "titlebar.height",
                    "description": "The height of the titlebar (Default: 20)",
                    "type": "Integer"
                },
                {
                    "name": "titlebar.lineHeight",
                    "description": "The line-height of the text in the titlebar (Default: 20)",
                    "type": "Integer"
                },
                {
                    "name": "titlebar.padding",
                    "description": "The horizontal padding of the titlebar (Default: 5)",
                    "type": "Integer"
                },
                {
                    "name": "titlebar.visible",
                    "description": "If the titlebar is visible or not (Default: true)",
                    "type": "Boolean"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Chart"
        },
        {
            "file": "src\\chart\\Chart.es6",
            "line": 378,
            "description": "Holds the list of series attached to the chart.",
            "itemtype": "property",
            "name": "series",
            "type": "Array",
            "access": "protected",
            "tagname": "",
            "default": "[]",
            "since": "@todo",
            "class": "EJSC.Chart"
        },
        {
            "file": "src\\chart\\Chart.es6",
            "line": 393,
            "description": "Holds the list of axis property names.",
            "itemtype": "property",
            "name": "axisList",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "default": "['axisBottom', 'axisLeft', 'axisRight', 'axisTop']",
            "since": "@todo",
            "class": "EJSC.Chart"
        },
        {
            "file": "src\\chart\\Chart.es6",
            "line": 402,
            "description": "Defines the next index to use to choose a color.",
            "itemtype": "property",
            "name": "colorIndex",
            "type": "Integer",
            "access": "private",
            "tagname": "",
            "default": "0",
            "since": "@todo",
            "class": "EJSC.Chart"
        },
        {
            "file": "src\\chart\\Chart.es6",
            "line": 411,
            "description": "Holds the coordinates that the chart can draw in.",
            "itemtype": "property",
            "name": "drawArea",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "since": "@todo",
            "class": "EJSC.Chart",
            "subprops": [
                {
                    "name": "bottom",
                    "description": "The bottom coordinate of the chart's draw area (Default: null)",
                    "type": "Integer"
                },
                {
                    "name": "left",
                    "description": "The left coordinate of the chart's draw area (Default: null)",
                    "type": "Integer"
                },
                {
                    "name": "right",
                    "description": "The right coordinate of the chart's draw area (Default: null)",
                    "type": "Integer"
                },
                {
                    "name": "top",
                    "description": "The top coordinate of the chart's draw area (Default: null)",
                    "type": "Integer"
                }
            ]
        },
        {
            "file": "src\\chart\\Chart.es6",
            "line": 423,
            "description": "Holds the list of axis side names.",
            "itemtype": "property",
            "name": "sidesList",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "default": "['bottom', 'left', 'righ', 'top']",
            "since": "@todo",
            "class": "EJSC.Chart"
        },
        {
            "file": "src\\chart\\Chart.es6",
            "line": 433,
            "description": "Handles when the user clicks the mouse button.",
            "itemtype": "method",
            "name": "handleClick",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "WindowEvent",
                    "description": "event The window event"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Chart"
        },
        {
            "file": "src\\chart\\Chart.es6",
            "line": 447,
            "description": "Handles when the user presses a key.",
            "itemtype": "method",
            "name": "handleKeyDown",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "WindowEvent",
                    "description": "event The window event"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Chart"
        },
        {
            "file": "src\\chart\\Chart.es6",
            "line": 461,
            "description": "Handles when the user releases a key.",
            "itemtype": "method",
            "name": "handleKeyUp",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "WindowEvent",
                    "description": "event The window event"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Chart"
        },
        {
            "file": "src\\chart\\Chart.es6",
            "line": 475,
            "description": "Handles when the user presses the mouse button.",
            "itemtype": "method",
            "name": "handleMouseDown",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "WindowEvent",
                    "description": "event The window event"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Chart"
        },
        {
            "file": "src\\chart\\Chart.es6",
            "line": 489,
            "description": "Handles when the user moves the mouse.",
            "itemtype": "method",
            "name": "handleMouseMove",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "WindowEvent",
                    "description": "event The window event"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Chart"
        },
        {
            "file": "src\\chart\\Chart.es6",
            "line": 503,
            "description": "Handles when the user releases the mouse button.",
            "itemtype": "method",
            "name": "handleMouseUp",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "WindowEvent",
                    "description": "event The window event"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Chart"
        },
        {
            "file": "src\\chart\\Chart.es6",
            "line": 517,
            "description": "Handles when the user scrolls the mouse wheel.",
            "itemtype": "method",
            "name": "handleMouseWheel",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "WindowEvent",
                    "description": "event The window event"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Chart"
        },
        {
            "file": "src\\chart\\Chart.es6",
            "line": 530,
            "description": "Adds a new series to the chart and (optionally) redraws the chart.",
            "example": [
                "\n  ```\n  // Create a chart in the element with the id 'chart-container'\n  let chart = new EJSC['sparkline'].Chart(document.getElementById('chart-container'));\n\n  // Add a scatter series to the chart\n  let series = chart.addSeries(\n    new EJSC['sparkline'].ScatterSeries(...)\n  );\n  ```"
            ],
            "itemtype": "method",
            "name": "addSeries",
            "params": [
                {
                    "name": "series",
                    "description": "The series to add to the chart",
                    "type": "EJSC['sparkline'].Series"
                },
                {
                    "name": "redraw",
                    "description": "Whether to redraw the chart or not",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "return": {
                "description": "The series that was added",
                "type": "EJSC['sparkline'].Series"
            },
            "since": "@todo",
            "class": "EJSC.Chart"
        },
        {
            "file": "src\\chart\\Chart.es6",
            "line": 573,
            "description": "Redraws the chart.",
            "example": [
                "\n  ```\n  // Create a chart in the element with the id 'chart-container'\n  let chart = new EJSC['sparkline'].Chart('chart-container');\n\n  // Add a scatter series to the chart without redrawing the chart\n  let series1 = chart.addSeries(\n    new EJSC['sparkline'].ScatterSeries(...),\n    false\n  );\n\n  // Add a line series to the chart without redrawing the chart\n  let series2 = chart.addSeries(\n    new EJSC['sparkline'].LineSeries(...),\n    false\n  );\n\n  // Redraw the chart\n  chart.redraw();\n  ```"
            ],
            "itemtype": "method",
            "name": "redraw",
            "since": "@todo",
            "class": "EJSC.Chart"
        },
        {
            "file": "src\\chart\\Chart.es6",
            "line": 705,
            "description": "Draws each of the axis to the chart.\nUpdates the draw area according to the axes sizes.",
            "itemtype": "method",
            "name": "drawAxes",
            "access": "private",
            "tagname": "",
            "since": "@todo",
            "class": "EJSC.Chart"
        },
        {
            "file": "src\\chart\\Chart.es6",
            "line": 726,
            "description": "Draws the background of the chart.",
            "itemtype": "method",
            "name": "drawBackground",
            "access": "private",
            "tagname": "",
            "since": "@todo",
            "class": "EJSC.Chart"
        },
        {
            "file": "src\\chart\\Chart.es6",
            "line": 741,
            "description": "Loops through each of the visible series and draw them to the chart.",
            "itemtype": "method",
            "name": "drawSeries",
            "access": "private",
            "tagname": "",
            "since": "@todo",
            "class": "EJSC.Chart"
        },
        {
            "file": "src\\chart\\Chart.es6",
            "line": 765,
            "description": "Draws the titlebar to the chart.",
            "itemtype": "method",
            "name": "drawTitlebar",
            "access": "private",
            "tagname": "",
            "since": "@todo",
            "class": "EJSC.Chart"
        },
        {
            "file": "src\\chart\\Chart.es6",
            "line": 804,
            "description": "Gets the next available series color.",
            "itemtype": "method",
            "name": "getNextColor",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "The next available color",
                "type": "String"
            },
            "since": "@todo",
            "class": "EJSC.Chart"
        },
        {
            "file": "src\\chart\\Chart.es6",
            "line": 825,
            "description": "Gets the list of currently visible series.",
            "itemtype": "method",
            "name": "getVisibleSeries",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "The list of visible series",
                "type": "Array"
            },
            "since": "@todo",
            "class": "EJSC.Chart"
        },
        {
            "file": "src\\chart\\Chart.es6",
            "line": 838,
            "description": "Prepares the chart for first use.",
            "itemtype": "method",
            "name": "prepare",
            "access": "private",
            "tagname": "",
            "since": "@todo",
            "class": "EJSC.Chart"
        },
        {
            "file": "src\\chart\\Chart.es6",
            "line": 854,
            "description": "Prepares the chart's axes for first use.",
            "itemtype": "method",
            "name": "prepareAxes",
            "access": "private",
            "tagname": "",
            "since": "@todo",
            "class": "EJSC.Chart"
        },
        {
            "file": "src\\chart\\Chart.es6",
            "line": 878,
            "description": "Prepares the chart's listeners.",
            "itemtype": "method",
            "name": "prepareListeners",
            "access": "private",
            "tagname": "",
            "since": "@todo",
            "class": "EJSC.Chart"
        },
        {
            "file": "src\\chart\\Chart.es6",
            "line": 910,
            "description": "Resets the stored draw area.",
            "itemtype": "method",
            "name": "resetDrawArea",
            "access": "private",
            "tagname": "",
            "since": "@todo",
            "class": "EJSC.Chart"
        },
        {
            "file": "src\\chart\\Chart.es6",
            "line": 927,
            "description": "Fires when a property of the class has changed.",
            "itemtype": "method",
            "name": "update",
            "access": "private",
            "tagname": "",
            "since": "@todo",
            "class": "EJSC.Chart"
        },
        {
            "file": "src\\class\\Inheritable.es6",
            "line": 15,
            "description": "Defines if the class is initialized.",
            "itemtype": "property",
            "name": "initialized",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "default": "false",
            "since": "@todo",
            "class": "EJSC.Inheritable"
        },
        {
            "file": "src\\class\\Inheritable.es6",
            "line": 24,
            "description": "Defines if the class is currently listening for property changes.",
            "itemtype": "property",
            "name": "listening",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "default": "true",
            "since": "@todo",
            "class": "EJSC.Inheritable"
        },
        {
            "file": "src\\class\\Inheritable.es6",
            "line": 45,
            "description": "Applies new options to the class.",
            "example": [
                "\n  ```\n  // Create a class\n  let myClass = new EJSC.SomeClass();\n\n  // Apply some new options\n  myClass.apply({\n    newProperty: 'newValue'\n  });\n  ```"
            ],
            "itemtype": "method",
            "name": "apply",
            "params": [
                {
                    "name": "options",
                    "description": "The options to apply",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "{}"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Inheritable"
        },
        {
            "file": "src\\class\\Inheritable.es6",
            "line": 99,
            "description": "Initializes the variable properties of the class.",
            "itemtype": "method",
            "name": "init",
            "access": "private",
            "tagname": "",
            "since": "@todo",
            "class": "EJSC.Inheritable"
        },
        {
            "file": "src\\class\\Inheritable.es6",
            "line": 112,
            "description": "Updates the class after properties have changed.",
            "itemtype": "method",
            "name": "update",
            "access": "private",
            "tagname": "",
            "since": "@todo",
            "class": "EJSC.Inheritable"
        },
        {
            "file": "src\\drawing\\engine\\base\\Engine.es6",
            "line": 13,
            "description": "The owner drawing.",
            "itemtype": "property",
            "name": "drawing",
            "type": "EJSC.Drawing",
            "access": "private",
            "tagname": "",
            "default": "null",
            "since": "@todo",
            "class": "EJSC.Engine"
        },
        {
            "file": "src\\drawing\\engine\\base\\Engine.es6",
            "line": 22,
            "description": "Holds a pointer to the engine's dom element.",
            "itemtype": "property",
            "name": "element",
            "type": "Element",
            "access": "private",
            "tagname": "",
            "default": "null",
            "since": "@todo",
            "class": "EJSC.Engine"
        },
        {
            "file": "src\\drawing\\engine\\base\\Engine.es6",
            "line": 31,
            "description": "Draws an arc at a point.",
            "itemtype": "method",
            "name": "arc",
            "params": [
                {
                    "name": "cx",
                    "description": "The x coordinate of the center",
                    "type": "Number"
                },
                {
                    "name": "cy",
                    "description": "The y coordinate of the center",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "The radius of the arc",
                    "type": "Number"
                },
                {
                    "name": "startAngle",
                    "description": "The start angle (in radians)",
                    "type": "Number"
                },
                {
                    "name": "endAngle",
                    "description": "The end angle (in radians)",
                    "type": "Number"
                },
                {
                    "name": "counterClockwise",
                    "description": "Whether to draw this counter-clockwise",
                    "type": "Boolean"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Engine"
        },
        {
            "file": "src\\drawing\\engine\\base\\Engine.es6",
            "line": 47,
            "description": "Draws an arc stemming using a control point to an end point.",
            "itemtype": "method",
            "name": "arcTo",
            "params": [
                {
                    "name": "cpx",
                    "description": "The x coordinate of the control point",
                    "type": "Number"
                },
                {
                    "name": "cpy",
                    "description": "The y coordinate of the control point",
                    "type": "Number"
                },
                {
                    "name": "x",
                    "description": "The x coordinate of the end point",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate of the end point",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "The radius of the arc",
                    "type": "Number"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Engine"
        },
        {
            "file": "src\\drawing\\engine\\base\\Engine.es6",
            "line": 62,
            "description": "Begins clippig the given area.",
            "itemtype": "method",
            "name": "beginClip",
            "params": [
                {
                    "name": "left",
                    "description": "The left coordinate of the clip area",
                    "type": "Number"
                },
                {
                    "name": "top",
                    "description": "The top coordinate of the clip area",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "The width of the clip area",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The height of the clip area",
                    "type": "Number"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Engine"
        },
        {
            "file": "src\\drawing\\engine\\base\\Engine.es6",
            "line": 76,
            "description": "Begins a new path.",
            "itemtype": "method",
            "name": "beginPath",
            "since": "@todo",
            "class": "EJSC.Engine"
        },
        {
            "file": "src\\drawing\\engine\\base\\Engine.es6",
            "line": 86,
            "description": "Draws a bezier curve.",
            "itemtype": "method",
            "name": "bezierCurveTo",
            "params": [
                {
                    "name": "cp1x",
                    "description": "The x coordinate of the first control point",
                    "type": "Number"
                },
                {
                    "name": "cp1y",
                    "description": "The y coordinate of the first control point",
                    "type": "Number"
                },
                {
                    "name": "cp2x",
                    "description": "The x coordinate of the second control point",
                    "type": "Number"
                },
                {
                    "name": "cp2y",
                    "description": "The y coordinate of the second control point",
                    "type": "Number"
                },
                {
                    "name": "x",
                    "description": "The end x coordinate of the curve",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The end y coordinate of the curve",
                    "type": "Number"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Engine"
        },
        {
            "file": "src\\drawing\\engine\\base\\Engine.es6",
            "line": 102,
            "description": "Draws a circle on the canvas.",
            "itemtype": "method",
            "name": "circle",
            "params": [
                {
                    "name": "cx",
                    "description": "The x coordinate for the center of the circle",
                    "type": "Number"
                },
                {
                    "name": "cy",
                    "description": "The y coordinate for the center of the circle",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "The radius (in px) of the circle",
                    "type": "Number"
                },
                {
                    "name": "styles",
                    "description": "The styles to apply",
                    "type": "Object"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Engine"
        },
        {
            "file": "src\\drawing\\engine\\base\\Engine.es6",
            "line": 116,
            "description": "Clears the canvas.",
            "itemtype": "method",
            "name": "clear",
            "since": "@todo",
            "class": "EJSC.Engine"
        },
        {
            "file": "src\\drawing\\engine\\base\\Engine.es6",
            "line": 126,
            "description": "Closes the current path.",
            "itemtype": "method",
            "name": "clear",
            "since": "@todo",
            "class": "EJSC.Engine"
        },
        {
            "file": "src\\drawing\\engine\\base\\Engine.es6",
            "line": 136,
            "description": "Fills and strokes the given path on the canvas.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "styles",
                    "description": "The styles to apply",
                    "type": "Object"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Engine"
        },
        {
            "file": "src\\drawing\\engine\\base\\Engine.es6",
            "line": 147,
            "description": "Draws a ellipse.",
            "itemtype": "method",
            "name": "ellipse",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate to start the ellipse at",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate to start the ellipse at",
                    "type": "Number"
                },
                {
                    "name": "rx",
                    "description": "The x radius of the ellipse",
                    "type": "Number"
                },
                {
                    "name": "ry",
                    "description": "The y radius of the ellipse",
                    "type": "Number"
                },
                {
                    "name": "styles",
                    "description": "The styles to apply",
                    "type": "Object"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Engine"
        },
        {
            "file": "src\\drawing\\engine\\base\\Engine.es6",
            "line": 162,
            "description": "Ends the current clipping of the canvas' drawing area.",
            "itemtype": "method",
            "name": "endClip",
            "since": "@todo",
            "class": "EJSC.Engine"
        },
        {
            "file": "src\\drawing\\engine\\base\\Engine.es6",
            "line": 172,
            "description": "Fills the given path on the canvas.",
            "itemtype": "method",
            "name": "fill",
            "params": [
                {
                    "name": "styles",
                    "description": "The styles to apply",
                    "type": "Object"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Engine"
        },
        {
            "file": "src\\drawing\\engine\\base\\Engine.es6",
            "line": 183,
            "description": "Draws a horizontal line to a new position.",
            "itemtype": "method",
            "name": "horizontalTo",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate to draw to",
                    "type": "Number"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Engine"
        },
        {
            "file": "src\\drawing\\engine\\base\\Engine.es6",
            "line": 194,
            "description": "Draws a line between two points.",
            "itemtype": "method",
            "name": "line",
            "params": [
                {
                    "name": "x1",
                    "description": "The x coordinate for the starting point",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "The y coordinate for the starting point",
                    "type": "Number"
                },
                {
                    "name": "x2",
                    "description": "The x coordinate for the ending point",
                    "type": "Number"
                },
                {
                    "name": "y2",
                    "description": "The y coordinate for the ending point",
                    "type": "Number"
                },
                {
                    "name": "styles",
                    "description": "The styles to apply",
                    "type": "Object"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Engine"
        },
        {
            "file": "src\\drawing\\engine\\base\\Engine.es6",
            "line": 209,
            "description": "Draws a line to a new position.",
            "itemtype": "method",
            "name": "lineTo",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate to draw to",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate to draw to",
                    "type": "Number"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Engine"
        },
        {
            "file": "src\\drawing\\engine\\base\\Engine.es6",
            "line": 221,
            "description": "Measures the width of the given text.",
            "itemtype": "method",
            "name": "measureText",
            "params": [
                {
                    "name": "text",
                    "description": "The text",
                    "type": "String"
                },
                {
                    "name": "styles",
                    "description": "The styles to apply",
                    "type": "Object"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Engine"
        },
        {
            "file": "src\\drawing\\engine\\base\\Engine.es6",
            "line": 233,
            "description": "Moves the pen to a new position.",
            "itemtype": "method",
            "name": "moveTo",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate to move to",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate to move to",
                    "type": "Number"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Engine"
        },
        {
            "file": "src\\drawing\\engine\\base\\Engine.es6",
            "line": 245,
            "description": "Draws a quadratic curve.",
            "itemtype": "method",
            "name": "quadraticCurveTo",
            "params": [
                {
                    "name": "cpx",
                    "description": "The x coordinate of the control point",
                    "type": "Number"
                },
                {
                    "name": "cpy",
                    "description": "The y coordinate of the control point",
                    "type": "Number"
                },
                {
                    "name": "x",
                    "description": "The end x coordinate of the curve",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The end y coordinate of the curve",
                    "type": "Number"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Engine"
        },
        {
            "file": "src\\drawing\\engine\\base\\Engine.es6",
            "line": 259,
            "description": "Draws a rectanle on the canvas.",
            "itemtype": "method",
            "name": "rect",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate to start at",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate to start at",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "The width of the rectangle",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The height of the rectangle",
                    "type": "Number"
                },
                {
                    "name": "styles",
                    "description": "The styles to apply",
                    "type": "Object"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Engine"
        },
        {
            "file": "src\\drawing\\engine\\base\\Engine.es6",
            "line": 274,
            "description": "Resizes the canvas.",
            "itemtype": "method",
            "name": "resize",
            "params": [
                {
                    "name": "width",
                    "description": "The new width for the canvas",
                    "type": "Integer"
                },
                {
                    "name": "height",
                    "description": "The new height for the canvas",
                    "type": "Integer"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Engine"
        },
        {
            "file": "src\\drawing\\engine\\base\\Engine.es6",
            "line": 286,
            "description": "Draws a stroke along the current drawing path.",
            "itemtype": "method",
            "name": "stroke",
            "params": [
                {
                    "name": "styles",
                    "description": "The styles to apply",
                    "type": "Object"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Engine"
        },
        {
            "file": "src\\drawing\\engine\\base\\Engine.es6",
            "line": 297,
            "description": "Draws text on the canvas.",
            "itemtype": "method",
            "name": "text",
            "params": [
                {
                    "name": "text",
                    "description": "The text to draw on the canvas",
                    "type": "String"
                },
                {
                    "name": "x",
                    "description": "The x coordinate to draw the text at",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate to draw the text at",
                    "type": "Number"
                },
                {
                    "name": "styles",
                    "description": "The styles to apply",
                    "type": "Object"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Engine"
        },
        {
            "file": "src\\drawing\\engine\\base\\Engine.es6",
            "line": 311,
            "description": "Draws a vertical line to a new position.",
            "itemtype": "method",
            "name": "verticalTo",
            "params": [
                {
                    "name": "y",
                    "description": "The y coordinate to draw to",
                    "type": "Number"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Engine"
        },
        {
            "file": "src\\drawing\\engine\\base\\Engine.es6",
            "line": 332,
            "description": "Draws the given path.",
            "itemtype": "method",
            "name": "drawPath",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "path",
                    "description": "The path to draw",
                    "type": "Array"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Engine"
        },
        {
            "file": "src\\drawing\\engine\\base\\Engine.es6",
            "line": 350,
            "description": "Applies the given styles to the drawing context.",
            "itemtype": "method",
            "name": "stylize",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "styles",
                    "description": "The styles to apply",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "since": "@todo",
            "class": "EJSC.Engine"
        },
        {
            "file": "src\\drawing\\engine\\Canvas.es6",
            "line": 17,
            "description": "Holds a pointer to the drawing context for the canvas.",
            "itemtype": "property",
            "name": "ctx",
            "type": "CanvasRenderingContext2D",
            "access": "private",
            "tagname": "",
            "default": "null",
            "since": "@todo",
            "class": "EJSC.Canvas"
        },
        {
            "file": "src\\drawing\\engine\\Canvas.es6",
            "line": 26,
            "description": "Draws an arc at a point.",
            "itemtype": "method",
            "name": "arc",
            "params": [
                {
                    "name": "cx",
                    "description": "The x coordinate of the center",
                    "type": "Number"
                },
                {
                    "name": "cy",
                    "description": "The y coordinate of the center",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "The radius of the arc",
                    "type": "Number"
                },
                {
                    "name": "startAngle",
                    "description": "The start angle (in radians)",
                    "type": "Number"
                },
                {
                    "name": "endAngle",
                    "description": "The end angle (in radians)",
                    "type": "Number"
                },
                {
                    "name": "counterClockwise",
                    "description": "Whether to draw this counter-clockwise",
                    "type": "Boolean"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Canvas"
        },
        {
            "file": "src\\drawing\\engine\\Canvas.es6",
            "line": 43,
            "description": "Draws an arc stemming using a control point to an end point.",
            "itemtype": "method",
            "name": "arcTo",
            "params": [
                {
                    "name": "cpx",
                    "description": "The x coordinate of the control point",
                    "type": "Number"
                },
                {
                    "name": "cpy",
                    "description": "The y coordinate of the control point",
                    "type": "Number"
                },
                {
                    "name": "x",
                    "description": "The x coordinate of the end point",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate of the end point",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "The radius of the arc",
                    "type": "Number"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Canvas"
        },
        {
            "file": "src\\drawing\\engine\\Canvas.es6",
            "line": 59,
            "description": "Begins clippig the given area.",
            "itemtype": "method",
            "name": "beginClip",
            "params": [
                {
                    "name": "left",
                    "description": "The left coordinate of the clip area",
                    "type": "Number"
                },
                {
                    "name": "top",
                    "description": "The top coordinate of the clip area",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "The width of the clip area",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The height of the clip area",
                    "type": "Number"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Canvas"
        },
        {
            "file": "src\\drawing\\engine\\Canvas.es6",
            "line": 76,
            "description": "Begins a new path.",
            "itemtype": "method",
            "name": "beginPath",
            "since": "@todo",
            "class": "EJSC.Canvas"
        },
        {
            "file": "src\\drawing\\engine\\Canvas.es6",
            "line": 87,
            "description": "Draws a bezier curve.",
            "itemtype": "method",
            "name": "bezierCurveTo",
            "params": [
                {
                    "name": "cp1x",
                    "description": "The x coordinate of the first control point",
                    "type": "Number"
                },
                {
                    "name": "cp1y",
                    "description": "The y coordinate of the first control point",
                    "type": "Number"
                },
                {
                    "name": "cp2x",
                    "description": "The x coordinate of the second control point",
                    "type": "Number"
                },
                {
                    "name": "cp2y",
                    "description": "The y coordinate of the second control point",
                    "type": "Number"
                },
                {
                    "name": "x",
                    "description": "The end x coordinate of the curve",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The end y coordinate of the curve",
                    "type": "Number"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Canvas"
        },
        {
            "file": "src\\drawing\\engine\\Canvas.es6",
            "line": 104,
            "description": "Draws a circle on the canvas.",
            "itemtype": "method",
            "name": "circle",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate for the center of the circle",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate for the center of the circle",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "The radius (in px) of the circle",
                    "type": "Number"
                },
                {
                    "name": "styles",
                    "description": "The styles to apply",
                    "type": "Object"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Canvas"
        },
        {
            "file": "src\\drawing\\engine\\Canvas.es6",
            "line": 134,
            "description": "Clears the canvas.",
            "itemtype": "method",
            "name": "clear",
            "since": "@todo",
            "class": "EJSC.Canvas"
        },
        {
            "file": "src\\drawing\\engine\\Canvas.es6",
            "line": 145,
            "description": "Closes the current path.",
            "itemtype": "method",
            "name": "clear",
            "since": "@todo",
            "class": "EJSC.Canvas"
        },
        {
            "file": "src\\drawing\\engine\\Canvas.es6",
            "line": 156,
            "description": "Fills and strokes the given path on the canvas.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "styles",
                    "description": "The styles to apply",
                    "type": "Object"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Canvas"
        },
        {
            "file": "src\\drawing\\engine\\Canvas.es6",
            "line": 179,
            "description": "Draws a ellipse.",
            "itemtype": "method",
            "name": "ellipse",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate to start the ellipse at",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate to start the ellipse at",
                    "type": "Number"
                },
                {
                    "name": "rx",
                    "description": "The x radius of the ellipse",
                    "type": "Number"
                },
                {
                    "name": "ry",
                    "description": "The y radius of the ellipse",
                    "type": "Number"
                },
                {
                    "name": "styles",
                    "description": "The styles to apply",
                    "type": "Object"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Canvas"
        },
        {
            "file": "src\\drawing\\engine\\Canvas.es6",
            "line": 216,
            "description": "Ends the current clipping of the canvas' drawing area.",
            "itemtype": "method",
            "name": "endClip",
            "since": "@todo",
            "class": "EJSC.Canvas"
        },
        {
            "file": "src\\drawing\\engine\\Canvas.es6",
            "line": 227,
            "description": "Fills the given path on the canvas.",
            "itemtype": "method",
            "name": "fill",
            "params": [
                {
                    "name": "styles",
                    "description": "The styles to apply",
                    "type": "Object"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Canvas"
        },
        {
            "file": "src\\drawing\\engine\\Canvas.es6",
            "line": 245,
            "description": "Draws a horizontal line to a new position.",
            "itemtype": "method",
            "name": "horizontalTo",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate to draw to",
                    "type": "Number"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Canvas"
        },
        {
            "file": "src\\drawing\\engine\\Canvas.es6",
            "line": 257,
            "description": "Draws a line between two points.",
            "itemtype": "method",
            "name": "line",
            "params": [
                {
                    "name": "x1",
                    "description": "The x coordinate for the starting point",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "The y coordinate for the starting point",
                    "type": "Number"
                },
                {
                    "name": "x2",
                    "description": "The x coordinate for the ending point",
                    "type": "Number"
                },
                {
                    "name": "y2",
                    "description": "The y coordinate for the ending point",
                    "type": "Number"
                },
                {
                    "name": "styles",
                    "description": "The styles to apply",
                    "type": "Object"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Canvas"
        },
        {
            "file": "src\\drawing\\engine\\Canvas.es6",
            "line": 286,
            "description": "Draws a line to a new position.",
            "itemtype": "method",
            "name": "lineTo",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate to draw to",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate to draw to",
                    "type": "Number"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Canvas"
        },
        {
            "file": "src\\drawing\\engine\\Canvas.es6",
            "line": 299,
            "description": "Measures the width of the given text.",
            "itemtype": "method",
            "name": "measureText",
            "params": [
                {
                    "name": "text",
                    "description": "The text",
                    "type": "String"
                },
                {
                    "name": "styles",
                    "description": "The styles to apply",
                    "type": "Object"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Canvas"
        },
        {
            "file": "src\\drawing\\engine\\Canvas.es6",
            "line": 321,
            "description": "Moves the pen to a new position.",
            "itemtype": "method",
            "name": "moveTo",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate to move to",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate to move to",
                    "type": "Number"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Canvas"
        },
        {
            "file": "src\\drawing\\engine\\Canvas.es6",
            "line": 334,
            "description": "Draws a quadratic curve.",
            "itemtype": "method",
            "name": "quadraticCurveTo",
            "params": [
                {
                    "name": "cpx",
                    "description": "The x coordinate of the control point",
                    "type": "Number"
                },
                {
                    "name": "cpy",
                    "description": "The y coordinate of the control point",
                    "type": "Number"
                },
                {
                    "name": "x",
                    "description": "The end x coordinate of the curve",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The end y coordinate of the curve",
                    "type": "Number"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Canvas"
        },
        {
            "file": "src\\drawing\\engine\\Canvas.es6",
            "line": 349,
            "description": "Draws a rectanle on the canvas.",
            "itemtype": "method",
            "name": "rect",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate to start at",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate to start at",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "The width of the rectangle",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The height of the rectangle",
                    "type": "Number"
                },
                {
                    "name": "styles",
                    "description": "The styles to apply",
                    "type": "Object"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Canvas"
        },
        {
            "file": "src\\drawing\\engine\\Canvas.es6",
            "line": 380,
            "description": "Resizes the canvas.",
            "itemtype": "method",
            "name": "resize",
            "params": [
                {
                    "name": "width",
                    "description": "The new width for the canvas",
                    "type": "Integer"
                },
                {
                    "name": "height",
                    "description": "The new height for the canvas",
                    "type": "Integer"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Canvas"
        },
        {
            "file": "src\\drawing\\engine\\Canvas.es6",
            "line": 394,
            "description": "Draws a stroke along the current drawing path.",
            "itemtype": "method",
            "name": "stroke",
            "params": [
                {
                    "name": "styles",
                    "description": "The styles to apply",
                    "type": "Object"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Canvas"
        },
        {
            "file": "src\\drawing\\engine\\Canvas.es6",
            "line": 414,
            "description": "Draws text on the canvas.",
            "itemtype": "method",
            "name": "text",
            "params": [
                {
                    "name": "text",
                    "description": "The text to draw on the canvas",
                    "type": "String"
                },
                {
                    "name": "x",
                    "description": "The x coordinate to draw the text at",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate to draw the text at",
                    "type": "Number"
                },
                {
                    "name": "styles",
                    "description": "The styles to apply",
                    "type": "Object"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Canvas"
        },
        {
            "file": "src\\drawing\\engine\\Canvas.es6",
            "line": 441,
            "description": "Draws a vertical line to a new position.",
            "itemtype": "method",
            "name": "verticalTo",
            "params": [
                {
                    "name": "y",
                    "description": "The y coordinate to draw to",
                    "type": "Number"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Canvas"
        },
        {
            "file": "src\\drawing\\engine\\Canvas.es6",
            "line": 474,
            "description": "Draws the given path.",
            "itemtype": "method",
            "name": "drawPath",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "path",
                    "description": "The path to draw",
                    "type": "Array"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Canvas"
        },
        {
            "file": "src\\drawing\\engine\\Canvas.es6",
            "line": 487,
            "description": "Applies the given styles to the drawing context.",
            "itemtype": "method",
            "name": "stylize",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "styles",
                    "description": "The styles to apply",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "{}"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Canvas"
        },
        {
            "file": "src\\drawing\\engine\\Canvas.es6",
            "line": 503,
            "description": "Applies the default styles to the drawing context.",
            "itemtype": "method",
            "name": "unstylize",
            "access": "private",
            "tagname": "",
            "since": "@todo",
            "class": "EJSC.Canvas"
        },
        {
            "file": "src\\drawing\\engine\\Canvas.es6",
            "line": 519,
            "description": "Determines if the browser supports CANVAS.",
            "itemtype": "method",
            "name": "isSupported",
            "static": 1,
            "access": "private",
            "tagname": "",
            "return": {
                "description": "If the browser supports CANVAS",
                "type": "Boolean"
            },
            "since": "@todo",
            "class": "EJSC.Canvas"
        },
        {
            "file": "src\\drawing\\engine\\SVG.es6",
            "line": 16,
            "description": "Holds a pointer to the engine's background dom element.",
            "itemtype": "property",
            "name": "background.",
            "type": "Element",
            "access": "private",
            "tagname": "",
            "default": "null",
            "since": "@todo",
            "class": "EJSC.SVG"
        },
        {
            "file": "src\\drawing\\engine\\SVG.es6",
            "line": 25,
            "description": "Holds a current clip id.",
            "itemtype": "property",
            "name": "clipId",
            "type": "String",
            "access": "private",
            "tagname": "",
            "default": "null",
            "since": "@todo",
            "class": "EJSC.SVG"
        },
        {
            "file": "src\\drawing\\engine\\SVG.es6",
            "line": 34,
            "description": "Holds the current clip index.",
            "itemtype": "property",
            "name": "clipIndex",
            "type": "Integer",
            "access": "private",
            "tagname": "",
            "default": "null",
            "since": "@todo",
            "class": "EJSC.SVG"
        },
        {
            "file": "src\\drawing\\engine\\SVG.es6",
            "line": 43,
            "description": "Holds a pointer to the engine's definitions dom element.",
            "itemtype": "property",
            "name": "definitions",
            "type": "Element",
            "access": "private",
            "tagname": "",
            "default": "null",
            "since": "@todo",
            "class": "EJSC.SVG"
        },
        {
            "file": "src\\drawing\\engine\\SVG.es6",
            "line": 52,
            "description": "Holds the current drawing path.",
            "itemtype": "property",
            "name": "path",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "default": "[]",
            "since": "@todo",
            "class": "EJSC.SVG"
        },
        {
            "file": "src\\drawing\\engine\\SVG.es6",
            "line": 61,
            "description": "Draws an arc at a point.",
            "itemtype": "method",
            "name": "arc",
            "params": [
                {
                    "name": "cx",
                    "description": "The x coordinate of the center",
                    "type": "Number"
                },
                {
                    "name": "cy",
                    "description": "The y coordinate of the center",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "The radius of the arc",
                    "type": "Number"
                },
                {
                    "name": "startAngle",
                    "description": "The start angle (in radians)",
                    "type": "Number"
                },
                {
                    "name": "endAngle",
                    "description": "The end angle (in radians)",
                    "type": "Number"
                },
                {
                    "name": "counterClockwise",
                    "description": "Whether to draw this counter-clockwise",
                    "type": "Boolean"
                }
            ],
            "since": "@todo",
            "class": "EJSC.SVG"
        },
        {
            "file": "src\\drawing\\engine\\SVG.es6",
            "line": 94,
            "description": "Draws an arc stemming using a control point to an end point.",
            "itemtype": "method",
            "name": "arcTo",
            "params": [
                {
                    "name": "cpx",
                    "description": "The x coordinate of the control point",
                    "type": "Number"
                },
                {
                    "name": "cpy",
                    "description": "The y coordinate of the control point",
                    "type": "Number"
                },
                {
                    "name": "x",
                    "description": "The x coordinate of the end point",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate of the end point",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "The radius of the arc",
                    "type": "Number"
                }
            ],
            "since": "@todo",
            "class": "EJSC.SVG"
        },
        {
            "file": "src\\drawing\\engine\\SVG.es6",
            "line": 140,
            "description": "Begins clippig the given area.",
            "itemtype": "method",
            "name": "beginClip",
            "params": [
                {
                    "name": "left",
                    "description": "The left coordinate of the clip area",
                    "type": "Number"
                },
                {
                    "name": "top",
                    "description": "The top coordinate of the clip area",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "The width of the clip area",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The height of the clip area",
                    "type": "Number"
                }
            ],
            "since": "@todo",
            "class": "EJSC.SVG"
        },
        {
            "file": "src\\drawing\\engine\\SVG.es6",
            "line": 171,
            "description": "Begins a new path.",
            "itemtype": "method",
            "name": "beginPath",
            "since": "@todo",
            "class": "EJSC.SVG"
        },
        {
            "file": "src\\drawing\\engine\\SVG.es6",
            "line": 182,
            "description": "Draws a bezier curve.",
            "itemtype": "method",
            "name": "bezierCurveTo",
            "params": [
                {
                    "name": "cp1x",
                    "description": "The x coordinate of the first control point",
                    "type": "Number"
                },
                {
                    "name": "cp1y",
                    "description": "The y coordinate of the first control point",
                    "type": "Number"
                },
                {
                    "name": "cp2x",
                    "description": "The x coordinate of the second control point",
                    "type": "Number"
                },
                {
                    "name": "cp2y",
                    "description": "The y coordinate of the second control point",
                    "type": "Number"
                },
                {
                    "name": "x",
                    "description": "The end x coordinate of the curve",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The end y coordinate of the curve",
                    "type": "Number"
                }
            ],
            "since": "@todo",
            "class": "EJSC.SVG"
        },
        {
            "file": "src\\drawing\\engine\\SVG.es6",
            "line": 199,
            "description": "Draws a circle on the canvas.",
            "itemtype": "method",
            "name": "circle",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate for the center of the circle",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate for the center of the circle",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "The radius (in px) of the circle",
                    "type": "Number"
                },
                {
                    "name": "styles",
                    "description": "The styles to apply",
                    "type": "Object"
                }
            ],
            "since": "@todo",
            "class": "EJSC.SVG"
        },
        {
            "file": "src\\drawing\\engine\\SVG.es6",
            "line": 218,
            "description": "Clears the canvas.",
            "itemtype": "method",
            "name": "clear",
            "since": "@todo",
            "class": "EJSC.SVG"
        },
        {
            "file": "src\\drawing\\engine\\SVG.es6",
            "line": 240,
            "description": "Closes the current path.",
            "itemtype": "method",
            "name": "clear",
            "since": "@todo",
            "class": "EJSC.SVG"
        },
        {
            "file": "src\\drawing\\engine\\SVG.es6",
            "line": 251,
            "description": "Fills and strokes the given path on the canvas.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "styles",
                    "description": "The styles to apply",
                    "type": "Object"
                }
            ],
            "since": "@todo",
            "class": "EJSC.SVG"
        },
        {
            "file": "src\\drawing\\engine\\SVG.es6",
            "line": 262,
            "description": "Draws a ellipse.",
            "itemtype": "method",
            "name": "ellipse",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate to start the ellipse at",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate to start the ellipse at",
                    "type": "Number"
                },
                {
                    "name": "rx",
                    "description": "The x radius of the ellipse",
                    "type": "Number"
                },
                {
                    "name": "ry",
                    "description": "The y radius of the ellipse",
                    "type": "Number"
                },
                {
                    "name": "styles",
                    "description": "The styles to apply",
                    "type": "Object"
                }
            ],
            "since": "@todo",
            "class": "EJSC.SVG"
        },
        {
            "file": "src\\drawing\\engine\\SVG.es6",
            "line": 283,
            "description": "Ends the current clipping of the canvas' drawing area.",
            "itemtype": "method",
            "name": "endClip",
            "since": "@todo",
            "class": "EJSC.SVG"
        },
        {
            "file": "src\\drawing\\engine\\SVG.es6",
            "line": 294,
            "description": "Fills the given path on the canvas.",
            "itemtype": "method",
            "name": "fill",
            "params": [
                {
                    "name": "styles",
                    "description": "The styles to apply",
                    "type": "Object"
                }
            ],
            "since": "@todo",
            "class": "EJSC.SVG"
        },
        {
            "file": "src\\drawing\\engine\\SVG.es6",
            "line": 307,
            "description": "Draws a horizontal line to a new position.",
            "itemtype": "method",
            "name": "horizontalTo",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate to draw to",
                    "type": "Number"
                }
            ],
            "since": "@todo",
            "class": "EJSC.SVG"
        },
        {
            "file": "src\\drawing\\engine\\SVG.es6",
            "line": 319,
            "description": "Draws a line between two points.",
            "itemtype": "method",
            "name": "line",
            "params": [
                {
                    "name": "x1",
                    "description": "The x coordinate for the starting point",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "The y coordinate for the starting point",
                    "type": "Number"
                },
                {
                    "name": "x2",
                    "description": "The x coordinate for the ending point",
                    "type": "Number"
                },
                {
                    "name": "y2",
                    "description": "The y coordinate for the ending point",
                    "type": "Number"
                },
                {
                    "name": "styles",
                    "description": "The styles to apply",
                    "type": "Object"
                }
            ],
            "since": "@todo",
            "class": "EJSC.SVG"
        },
        {
            "file": "src\\drawing\\engine\\SVG.es6",
            "line": 340,
            "description": "Draws a line to a new position.",
            "itemtype": "method",
            "name": "lineTo",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate to draw to",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate to draw to",
                    "type": "Number"
                }
            ],
            "since": "@todo",
            "class": "EJSC.SVG"
        },
        {
            "file": "src\\drawing\\engine\\SVG.es6",
            "line": 353,
            "description": "Measures the width of the given text.",
            "itemtype": "method",
            "name": "measureText",
            "params": [
                {
                    "name": "text",
                    "description": "The text",
                    "type": "String"
                },
                {
                    "name": "styles",
                    "description": "The styles to apply",
                    "type": "Object"
                }
            ],
            "since": "@todo",
            "class": "EJSC.SVG"
        },
        {
            "file": "src\\drawing\\engine\\SVG.es6",
            "line": 366,
            "description": "Moves the pen to a new position.",
            "itemtype": "method",
            "name": "moveTo",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate to move to",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate to move to",
                    "type": "Number"
                }
            ],
            "since": "@todo",
            "class": "EJSC.SVG"
        },
        {
            "file": "src\\drawing\\engine\\SVG.es6",
            "line": 379,
            "description": "Draws a quadratic curve.",
            "itemtype": "method",
            "name": "quadraticCurveTo",
            "params": [
                {
                    "name": "cpx",
                    "description": "The x coordinate of the control point",
                    "type": "Number"
                },
                {
                    "name": "cpy",
                    "description": "The y coordinate of the control point",
                    "type": "Number"
                },
                {
                    "name": "x",
                    "description": "The end x coordinate of the curve",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The end y coordinate of the curve",
                    "type": "Number"
                }
            ],
            "since": "@todo",
            "class": "EJSC.SVG"
        },
        {
            "file": "src\\drawing\\engine\\SVG.es6",
            "line": 394,
            "description": "Draws a rectanle on the canvas.",
            "itemtype": "method",
            "name": "rect",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate to start at",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate to start at",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "The width of the rectangle",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The height of the rectangle",
                    "type": "Number"
                },
                {
                    "name": "styles",
                    "description": "The styles to apply",
                    "type": "Object"
                }
            ],
            "since": "@todo",
            "class": "EJSC.SVG"
        },
        {
            "file": "src\\drawing\\engine\\SVG.es6",
            "line": 415,
            "description": "Resizes the canvas.",
            "itemtype": "method",
            "name": "resize",
            "params": [
                {
                    "name": "width",
                    "description": "The new width for the canvas",
                    "type": "Integer"
                },
                {
                    "name": "height",
                    "description": "The new height for the canvas",
                    "type": "Integer"
                }
            ],
            "since": "@todo",
            "class": "EJSC.SVG"
        },
        {
            "file": "src\\drawing\\engine\\SVG.es6",
            "line": 436,
            "description": "Draws a stroke along the current drawing path.",
            "itemtype": "method",
            "name": "stroke",
            "params": [
                {
                    "name": "styles",
                    "description": "The styles to apply",
                    "type": "Object"
                }
            ],
            "since": "@todo",
            "class": "EJSC.SVG"
        },
        {
            "file": "src\\drawing\\engine\\SVG.es6",
            "line": 450,
            "description": "Draws text on the canvas.",
            "itemtype": "method",
            "name": "text",
            "params": [
                {
                    "name": "text",
                    "description": "The text to draw on the canvas",
                    "type": "String"
                },
                {
                    "name": "x",
                    "description": "The x coordinate to draw the text at",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate to draw the text at",
                    "type": "Number"
                },
                {
                    "name": "styles",
                    "description": "The styles to apply",
                    "type": "Object"
                }
            ],
            "since": "@todo",
            "class": "EJSC.SVG"
        },
        {
            "file": "src\\drawing\\engine\\SVG.es6",
            "line": 474,
            "description": "Draws a vertical line to a new position.",
            "itemtype": "method",
            "name": "verticalTo",
            "params": [
                {
                    "name": "y",
                    "description": "The y coordinate to draw to",
                    "type": "Number"
                }
            ],
            "since": "@todo",
            "class": "EJSC.SVG"
        },
        {
            "file": "src\\drawing\\engine\\SVG.es6",
            "line": 525,
            "description": "Creates an SVG elemen.",
            "itemtype": "method",
            "name": "createElement",
            "params": [
                {
                    "name": "tagName",
                    "description": "The type of element to create",
                    "type": "String"
                },
                {
                    "name": "attributes",
                    "description": "The attributes to add to the element",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Element"
            },
            "since": "@todo",
            "class": "EJSC.SVG"
        },
        {
            "file": "src\\drawing\\engine\\SVG.es6",
            "line": 592,
            "description": "Draws the given path.",
            "itemtype": "method",
            "name": "drawPath",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "styles",
                    "description": "The styles to apply",
                    "type": "Object"
                }
            ],
            "since": "@todo",
            "class": "EJSC.SVG"
        },
        {
            "file": "src\\drawing\\engine\\SVG.es6",
            "line": 607,
            "description": "Applies the given styles to the drawing context.",
            "itemtype": "method",
            "name": "stylize",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "styles",
                    "description": "The styles to apply",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "since": "@todo",
            "class": "EJSC.SVG"
        },
        {
            "file": "src\\drawing\\engine\\SVG.es6",
            "line": 625,
            "description": "Defines the style conversion names.",
            "itemtype": "property",
            "name": "styles",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "static": 1,
            "since": "@todo",
            "class": "EJSC.SVG"
        },
        {
            "file": "src\\drawing\\engine\\SVG.es6",
            "line": 646,
            "description": "Defines the stylesheet that holds the global SVG styles.",
            "itemtype": "property",
            "name": "stylesheet",
            "type": "StyleSheet",
            "access": "private",
            "tagname": "",
            "static": 1,
            "default": "null",
            "since": "@todo",
            "class": "EJSC.SVG"
        },
        {
            "file": "src\\drawing\\engine\\SVG.es6",
            "line": 657,
            "description": "Defines the SVG namespace.",
            "itemtype": "property",
            "name": "svgns",
            "type": "String",
            "access": "private",
            "tagname": "",
            "static": 1,
            "default": "'http://www.w3.org/2000/svg'",
            "since": "@todo",
            "class": "EJSC.SVG"
        },
        {
            "file": "src\\drawing\\engine\\SVG.es6",
            "line": 668,
            "description": "Defines the XML namespace.",
            "itemtype": "property",
            "name": "xmlns",
            "type": "String",
            "access": "private",
            "tagname": "",
            "static": 1,
            "default": "'http://www.w3.org/2000/xmlns/'",
            "since": "@todo",
            "class": "EJSC.SVG"
        },
        {
            "file": "src\\drawing\\engine\\SVG.es6",
            "line": 679,
            "description": "Defines the Xlink namespace.",
            "itemtype": "property",
            "name": "xlink",
            "type": "String",
            "access": "private",
            "tagname": "",
            "static": 1,
            "default": "'http://www.w3.org/2000/xlink'",
            "since": "@todo",
            "class": "EJSC.SVG"
        },
        {
            "file": "src\\drawing\\engine\\SVG.es6",
            "line": 690,
            "description": "Builds the default SVG stylesheet.",
            "itemtype": "method",
            "name": "buildStylesheet",
            "access": "private",
            "tagname": "",
            "static": 1,
            "since": "@todo",
            "class": "EJSC.SVG"
        },
        {
            "file": "src\\drawing\\engine\\SVG.es6",
            "line": 724,
            "description": "Determines if the browser supports SVG.",
            "itemtype": "method",
            "name": "isSupported",
            "static": 1,
            "access": "private",
            "tagname": "",
            "return": {
                "description": "If the browser supports SVG",
                "type": "Boolean"
            },
            "since": "@todo",
            "class": "EJSC.SVG"
        },
        {
            "file": "src\\drawing\\engine\\VML.es6",
            "line": 15,
            "description": "Draws an arc at a point.",
            "itemtype": "method",
            "name": "arc",
            "params": [
                {
                    "name": "cx",
                    "description": "The x coordinate of the center",
                    "type": "Number"
                },
                {
                    "name": "cy",
                    "description": "The y coordinate of the center",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "The radius of the arc",
                    "type": "Number"
                },
                {
                    "name": "startAngle",
                    "description": "The start angle (in radians)",
                    "type": "Number"
                },
                {
                    "name": "endAngle",
                    "description": "The end angle (in radians)",
                    "type": "Number"
                },
                {
                    "name": "counterClockwise",
                    "description": "Whether to draw this counter-clockwise",
                    "type": "Boolean"
                }
            ],
            "since": "@todo",
            "class": "EJSC.VML"
        },
        {
            "file": "src\\drawing\\engine\\VML.es6",
            "line": 31,
            "description": "Draws an arc stemming using a control point to an end point.",
            "itemtype": "method",
            "name": "arcTo",
            "params": [
                {
                    "name": "cpx",
                    "description": "The x coordinate of the control point",
                    "type": "Number"
                },
                {
                    "name": "cpy",
                    "description": "The y coordinate of the control point",
                    "type": "Number"
                },
                {
                    "name": "x",
                    "description": "The x coordinate of the end point",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate of the end point",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "The radius of the arc",
                    "type": "Number"
                }
            ],
            "since": "@todo",
            "class": "EJSC.VML"
        },
        {
            "file": "src\\drawing\\engine\\VML.es6",
            "line": 46,
            "description": "Begins clippig the given area.",
            "itemtype": "method",
            "name": "beginClip",
            "params": [
                {
                    "name": "left",
                    "description": "The left coordinate of the clip area",
                    "type": "Number"
                },
                {
                    "name": "top",
                    "description": "The top coordinate of the clip area",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "The width of the clip area",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The height of the clip area",
                    "type": "Number"
                }
            ],
            "since": "@todo",
            "class": "EJSC.VML"
        },
        {
            "file": "src\\drawing\\engine\\VML.es6",
            "line": 60,
            "description": "Begins a new path.",
            "itemtype": "method",
            "name": "beginPath",
            "since": "@todo",
            "class": "EJSC.VML"
        },
        {
            "file": "src\\drawing\\engine\\VML.es6",
            "line": 70,
            "description": "Draws a bezier curve.",
            "itemtype": "method",
            "name": "bezierCurveTo",
            "params": [
                {
                    "name": "cp1x",
                    "description": "The x coordinate of the first control point",
                    "type": "Number"
                },
                {
                    "name": "cp1y",
                    "description": "The y coordinate of the first control point",
                    "type": "Number"
                },
                {
                    "name": "cp2x",
                    "description": "The x coordinate of the second control point",
                    "type": "Number"
                },
                {
                    "name": "cp2y",
                    "description": "The y coordinate of the second control point",
                    "type": "Number"
                },
                {
                    "name": "x",
                    "description": "The end x coordinate of the curve",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The end y coordinate of the curve",
                    "type": "Number"
                }
            ],
            "since": "@todo",
            "class": "EJSC.VML"
        },
        {
            "file": "src\\drawing\\engine\\VML.es6",
            "line": 86,
            "description": "Draws a circle on the canvas.",
            "itemtype": "method",
            "name": "circle",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate for the center of the circle",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate for the center of the circle",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "The radius (in px) of the circle",
                    "type": "Number"
                },
                {
                    "name": "styles",
                    "description": "The styles to apply",
                    "type": "Object"
                }
            ],
            "since": "@todo",
            "class": "EJSC.VML"
        },
        {
            "file": "src\\drawing\\engine\\VML.es6",
            "line": 100,
            "description": "Clears the canvas.",
            "itemtype": "method",
            "name": "clear",
            "since": "@todo",
            "class": "EJSC.VML"
        },
        {
            "file": "src\\drawing\\engine\\VML.es6",
            "line": 110,
            "description": "Closes the current path.",
            "itemtype": "method",
            "name": "clear",
            "since": "@todo",
            "class": "EJSC.VML"
        },
        {
            "file": "src\\drawing\\engine\\VML.es6",
            "line": 120,
            "description": "Fills and strokes the given path on the canvas.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "path",
                    "description": "The coordinates of the path",
                    "type": "Array"
                },
                {
                    "name": "styles",
                    "description": "The styles to apply",
                    "type": "Object"
                }
            ],
            "since": "@todo",
            "class": "EJSC.VML"
        },
        {
            "file": "src\\drawing\\engine\\VML.es6",
            "line": 132,
            "description": "Draws a ellipse.",
            "itemtype": "method",
            "name": "ellipse",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate to start the ellipse at",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate to start the ellipse at",
                    "type": "Number"
                },
                {
                    "name": "rx",
                    "description": "The x radius of the ellipse",
                    "type": "Number"
                },
                {
                    "name": "ry",
                    "description": "The y radius of the ellipse",
                    "type": "Number"
                },
                {
                    "name": "styles",
                    "description": "The styles to apply",
                    "type": "Object"
                }
            ],
            "since": "@todo",
            "class": "EJSC.VML"
        },
        {
            "file": "src\\drawing\\engine\\VML.es6",
            "line": 147,
            "description": "Ends the current clipping of the canvas' drawing area.",
            "itemtype": "method",
            "name": "endClip",
            "since": "@todo",
            "class": "EJSC.VML"
        },
        {
            "file": "src\\drawing\\engine\\VML.es6",
            "line": 157,
            "description": "Fills the given path on the canvas.",
            "itemtype": "method",
            "name": "fill",
            "params": [
                {
                    "name": "styles",
                    "description": "The styles to apply",
                    "type": "Object"
                }
            ],
            "since": "@todo",
            "class": "EJSC.VML"
        },
        {
            "file": "src\\drawing\\engine\\VML.es6",
            "line": 168,
            "description": "Draws a horizontal line to a new position.",
            "itemtype": "method",
            "name": "horizontalTo",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate to draw to",
                    "type": "Number"
                }
            ],
            "since": "@todo",
            "class": "EJSC.VML"
        },
        {
            "file": "src\\drawing\\engine\\VML.es6",
            "line": 179,
            "description": "Draws a line between two points.",
            "itemtype": "method",
            "name": "line",
            "params": [
                {
                    "name": "x1",
                    "description": "The x coordinate for the starting point",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "The y coordinate for the starting point",
                    "type": "Number"
                },
                {
                    "name": "x2",
                    "description": "The x coordinate for the ending point",
                    "type": "Number"
                },
                {
                    "name": "y2",
                    "description": "The y coordinate for the ending point",
                    "type": "Number"
                },
                {
                    "name": "styles",
                    "description": "The styles to apply",
                    "type": "Object"
                }
            ],
            "since": "@todo",
            "class": "EJSC.VML"
        },
        {
            "file": "src\\drawing\\engine\\VML.es6",
            "line": 194,
            "description": "Draws a line to a new position.",
            "itemtype": "method",
            "name": "lineTo",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate to draw to",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate to draw to",
                    "type": "Number"
                }
            ],
            "since": "@todo",
            "class": "EJSC.VML"
        },
        {
            "file": "src\\drawing\\engine\\VML.es6",
            "line": 206,
            "description": "Measures the width of the given text.",
            "itemtype": "method",
            "name": "measureText",
            "params": [
                {
                    "name": "text",
                    "description": "The text",
                    "type": "String"
                },
                {
                    "name": "styles",
                    "description": "The styles to apply",
                    "type": "Object"
                }
            ],
            "since": "@todo",
            "class": "EJSC.VML"
        },
        {
            "file": "src\\drawing\\engine\\VML.es6",
            "line": 218,
            "description": "Moves the pen to a new position.",
            "itemtype": "method",
            "name": "moveTo",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate to move to",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate to move to",
                    "type": "Number"
                }
            ],
            "since": "@todo",
            "class": "EJSC.VML"
        },
        {
            "file": "src\\drawing\\engine\\VML.es6",
            "line": 230,
            "description": "Draws a quadratic curve.",
            "itemtype": "method",
            "name": "quadraticCurveTo",
            "params": [
                {
                    "name": "cpx",
                    "description": "The x coordinate of the control point",
                    "type": "Number"
                },
                {
                    "name": "cpy",
                    "description": "The y coordinate of the control point",
                    "type": "Number"
                },
                {
                    "name": "x",
                    "description": "The end x coordinate of the curve",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The end y coordinate of the curve",
                    "type": "Number"
                }
            ],
            "since": "@todo",
            "class": "EJSC.VML"
        },
        {
            "file": "src\\drawing\\engine\\VML.es6",
            "line": 244,
            "description": "Draws a rectanle on the canvas.",
            "itemtype": "method",
            "name": "rect",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate to start at",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate to start at",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "The width of the rectangle",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The height of the rectangle",
                    "type": "Number"
                },
                {
                    "name": "styles",
                    "description": "The styles to apply",
                    "type": "Object"
                }
            ],
            "since": "@todo",
            "class": "EJSC.VML"
        },
        {
            "file": "src\\drawing\\engine\\VML.es6",
            "line": 259,
            "description": "Resizes the canvas.",
            "itemtype": "method",
            "name": "resize",
            "params": [
                {
                    "name": "width",
                    "description": "The new width for the canvas",
                    "type": "Integer"
                },
                {
                    "name": "height",
                    "description": "The new height for the canvas",
                    "type": "Integer"
                }
            ],
            "since": "@todo",
            "class": "EJSC.VML"
        },
        {
            "file": "src\\drawing\\engine\\VML.es6",
            "line": 271,
            "description": "Draws a stroke along the current drawing path.",
            "itemtype": "method",
            "name": "stroke",
            "params": [
                {
                    "name": "path",
                    "description": "The path",
                    "type": "Array"
                },
                {
                    "name": "styles",
                    "description": "The styles to apply",
                    "type": "Object"
                }
            ],
            "since": "@todo",
            "class": "EJSC.VML"
        },
        {
            "file": "src\\drawing\\engine\\VML.es6",
            "line": 283,
            "description": "Draws text on the canvas.",
            "itemtype": "method",
            "name": "text",
            "params": [
                {
                    "name": "text",
                    "description": "The text to draw on the canvas",
                    "type": "String"
                },
                {
                    "name": "x",
                    "description": "The x coordinate to draw the text at",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate to draw the text at",
                    "type": "Number"
                },
                {
                    "name": "styles",
                    "description": "The styles to apply",
                    "type": "Object"
                }
            ],
            "since": "@todo",
            "class": "EJSC.VML"
        },
        {
            "file": "src\\drawing\\engine\\VML.es6",
            "line": 297,
            "description": "Draws a vertical line to a new position.",
            "itemtype": "method",
            "name": "verticalTo",
            "params": [
                {
                    "name": "y",
                    "description": "The y coordinate to draw to",
                    "type": "Number"
                }
            ],
            "since": "@todo",
            "class": "EJSC.VML"
        },
        {
            "file": "src\\drawing\\engine\\VML.es6",
            "line": 316,
            "description": "Draws the given path.",
            "itemtype": "method",
            "name": "drawPath",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "path",
                    "description": "The path to draw",
                    "type": "Array"
                }
            ],
            "since": "@todo",
            "class": "EJSC.VML"
        },
        {
            "file": "src\\drawing\\engine\\VML.es6",
            "line": 328,
            "description": "Applies the given styles to the drawing context.",
            "itemtype": "method",
            "name": "stylize",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "styles",
                    "description": "The styles to apply",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "since": "@todo",
            "class": "EJSC.VML"
        },
        {
            "file": "src\\drawing\\engine\\VML.es6",
            "line": 342,
            "description": "Determines if the browser supports VML.",
            "itemtype": "method",
            "name": "isSupported",
            "static": 1,
            "access": "private",
            "tagname": "",
            "return": {
                "description": "If the browser supports VML",
                "type": "Boolean"
            },
            "since": "@todo",
            "class": "EJSC.VML"
        },
        {
            "file": "src\\drawing\\Drawing.es6",
            "line": 23,
            "description": "Defines the container element to render the drawing in.",
            "example": [
                "\n  ```\n  // Create a chart sending in the id of the container\n  let chart = new EJSC['.sparkline'].Chart('#chart-container');\n\n  // Create a chart sending in a reference to the container's element\n  let chart = new EJSC['.sparkline'].Chart(document.getElementById('chart-container'));\n  ```"
            ],
            "itemtype": "attribute",
            "name": "container",
            "type": "Element|String",
            "default": "null",
            "required": 1,
            "since": "@todo",
            "class": "EJSC.Drawing"
        },
        {
            "file": "src\\drawing\\Drawing.es6",
            "line": 62,
            "description": "Holds a pointer to the rendering engine.",
            "itemtype": "property",
            "name": "engine",
            "type": "EJSC.Engine",
            "access": "private",
            "tagname": "",
            "since": "@todo",
            "class": "EJSC.Drawing"
        },
        {
            "file": "src\\drawing\\Drawing.es6",
            "line": 70,
            "description": "Holds the coordinates of the last point.",
            "itemtype": "property",
            "name": "lastPoint",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "since": "@todo",
            "class": "EJSC.Drawing"
        },
        {
            "file": "src\\drawing\\Drawing.es6",
            "line": 78,
            "description": "Holds the coordinates of the last control point.",
            "itemtype": "property",
            "name": "lastControlPoint",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "since": "@todo",
            "class": "EJSC.Drawing"
        },
        {
            "file": "src\\drawing\\Drawing.es6",
            "line": 86,
            "description": "Draws an arc at a point.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "method",
            "name": "arc",
            "params": [
                {
                    "name": "cx",
                    "description": "The x coordinate of the center",
                    "type": "Number"
                },
                {
                    "name": "cy",
                    "description": "The y coordinate of the center",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "The radius of the arc",
                    "type": "Number"
                },
                {
                    "name": "startAngle",
                    "description": "The start angle (in radians)",
                    "type": "Number"
                },
                {
                    "name": "endAngle",
                    "description": "The end angle (in radians)",
                    "type": "Number"
                },
                {
                    "name": "counterClockwise",
                    "description": "Whether to draw this counter-clockwise",
                    "type": "Boolean"
                }
            ],
            "chainable": 1,
            "since": "@todo",
            "class": "EJSC.Drawing"
        },
        {
            "file": "src\\drawing\\Drawing.es6",
            "line": 120,
            "description": "Draws an arc stemming using a control point to an end point.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "method",
            "name": "arcTo",
            "params": [
                {
                    "name": "cpx",
                    "description": "The x coordinate of the control point",
                    "type": "Number"
                },
                {
                    "name": "cpy",
                    "description": "The y coordinate of the control point",
                    "type": "Number"
                },
                {
                    "name": "x",
                    "description": "The x coordinate of the end point",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate of the end point",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "The radius of the arc",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "since": "@todo",
            "class": "EJSC.Drawing"
        },
        {
            "file": "src\\drawing\\Drawing.es6",
            "line": 166,
            "description": "Begins clippig the given area.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "method",
            "name": "beginClip",
            "params": [
                {
                    "name": "left",
                    "description": "The left coordinate of the clip area",
                    "type": "Number"
                },
                {
                    "name": "top",
                    "description": "The top coordinate of the clip area",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "The width of the clip area",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The height of the clip area",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "since": "@todo",
            "class": "EJSC.Drawing"
        },
        {
            "file": "src\\drawing\\Drawing.es6",
            "line": 190,
            "description": "Begins a new path.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "method",
            "name": "beginPath",
            "chainable": 1,
            "since": "@todo",
            "class": "EJSC.Drawing"
        },
        {
            "file": "src\\drawing\\Drawing.es6",
            "line": 214,
            "description": "Draws a bezier curve.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "method",
            "name": "bezierCurveTo",
            "params": [
                {
                    "name": "cp1x",
                    "description": "The x coordinate of the first control point",
                    "type": "Number"
                },
                {
                    "name": "cp1y",
                    "description": "The y coordinate of the first control point",
                    "type": "Number"
                },
                {
                    "name": "cp2x",
                    "description": "The x coordinate of the second control point\nparam {Number} cp2y The y coordinate of the second control point",
                    "type": "Number"
                },
                {
                    "name": "x",
                    "description": "The end x coordinate of the curve",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The end y coordinate of the curve",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "since": "@todo",
            "class": "EJSC.Drawing"
        },
        {
            "file": "src\\drawing\\Drawing.es6",
            "line": 244,
            "description": "Draws a circle on the canvas.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "method",
            "name": "circle",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate for the center of the circle",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate for the center of the circle",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "The radius (in px) of the circle",
                    "type": "Number"
                },
                {
                    "name": "styles",
                    "description": "The styles to apply to the circle",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "since": "@todo",
            "class": "EJSC.Drawing"
        },
        {
            "file": "src\\drawing\\Drawing.es6",
            "line": 268,
            "description": "Clears the canvas.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "method",
            "name": "clear",
            "chainable": 1,
            "since": "@todo",
            "class": "EJSC.Drawing"
        },
        {
            "file": "src\\drawing\\Drawing.es6",
            "line": 288,
            "description": "Closes the current path.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "method",
            "name": "clear",
            "chainable": 1,
            "since": "@todo",
            "class": "EJSC.Drawing"
        },
        {
            "file": "src\\drawing\\Drawing.es6",
            "line": 308,
            "description": "Fills and strokes the given path on the canvas.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "styles",
                    "description": "The styles to apply to the fill",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "since": "@todo",
            "class": "EJSC.Drawing"
        },
        {
            "file": "src\\drawing\\Drawing.es6",
            "line": 329,
            "description": "Draws a ellipse.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "method",
            "name": "ellipse",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate to start the ellipse at",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate to start the ellipse at",
                    "type": "Number"
                },
                {
                    "name": "rx",
                    "description": "The x radius of the ellipse",
                    "type": "Number"
                },
                {
                    "name": "ry",
                    "description": "The y radius of the ellipse",
                    "type": "Number"
                },
                {
                    "name": "styles",
                    "description": "The set of attributes to apply to the ellipse",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "since": "@todo",
            "class": "EJSC.Drawing"
        },
        {
            "file": "src\\drawing\\Drawing.es6",
            "line": 354,
            "description": "Ends the current clipping of the canvas' drawing area.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "method",
            "name": "endClip",
            "chainable": 1,
            "since": "@todo",
            "class": "EJSC.Drawing"
        },
        {
            "file": "src\\drawing\\Drawing.es6",
            "line": 374,
            "description": "Fills the given path on the canvas.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "method",
            "name": "fill",
            "params": [
                {
                    "name": "styles",
                    "description": "The styles to apply to the fill",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "since": "@todo",
            "class": "EJSC.Drawing"
        },
        {
            "file": "src\\drawing\\Drawing.es6",
            "line": 395,
            "description": "Draws a horizontal line to a new position.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "method",
            "name": "horizontalTo",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate to draw to",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "since": "@todo",
            "class": "EJSC.Drawing"
        },
        {
            "file": "src\\drawing\\Drawing.es6",
            "line": 420,
            "description": "Draws a line between two points.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "method",
            "name": "line",
            "params": [
                {
                    "name": "x1",
                    "description": "The x coordinate for the starting point",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "The y coordinate for the starting point",
                    "type": "Number"
                },
                {
                    "name": "x2",
                    "description": "The x coordinate for the ending point",
                    "type": "Number"
                },
                {
                    "name": "y2",
                    "description": "The y coordinate for the ending point",
                    "type": "Number"
                },
                {
                    "name": "attributes",
                    "description": "The set of attributes to apply to the line",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "since": "@todo",
            "class": "EJSC.Drawing"
        },
        {
            "file": "src\\drawing\\Drawing.es6",
            "line": 445,
            "description": "Draws a line to a new position.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "method",
            "name": "lineTo",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate to draw to",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate to draw to",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "since": "@todo",
            "class": "EJSC.Drawing"
        },
        {
            "file": "src\\drawing\\Drawing.es6",
            "line": 471,
            "description": "Measures the width of the given text.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "method",
            "name": "measureText",
            "params": [
                {
                    "name": "text",
                    "description": "The text",
                    "type": "String"
                },
                {
                    "name": "styles",
                    "description": "The styles to apply",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The width of the text",
                "type": "Number"
            },
            "since": "@todo",
            "class": "EJSC.Drawing"
        },
        {
            "file": "src\\drawing\\Drawing.es6",
            "line": 490,
            "description": "Moves the pen to a new position.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "method",
            "name": "moveTo",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate to move to",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate to move to",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "since": "@todo",
            "class": "EJSC.Drawing"
        },
        {
            "file": "src\\drawing\\Drawing.es6",
            "line": 516,
            "description": "Draws a quadratic curve.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "method",
            "name": "quadraticCurveTo",
            "params": [
                {
                    "name": "cpx",
                    "description": "The x coordinate of the control point",
                    "type": "Number"
                },
                {
                    "name": "cpy",
                    "description": "The y coordinate of the control point",
                    "type": "Number"
                },
                {
                    "name": "x",
                    "description": "The end x coordinate of the curve",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The end y coordinate of the curve",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "since": "@todo",
            "class": "EJSC.Drawing"
        },
        {
            "file": "src\\drawing\\Drawing.es6",
            "line": 544,
            "description": "Draws a rectanle on the canvas.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "method",
            "name": "rect",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate to start at",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate to start at",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "The width of the rectangle",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The height of the rectangle",
                    "type": "Number"
                },
                {
                    "name": "styles",
                    "description": "The styles to apply to the rectangle",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "since": "@todo",
            "class": "EJSC.Drawing"
        },
        {
            "file": "src\\drawing\\Drawing.es6",
            "line": 569,
            "description": "Resizes the canvas.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "method",
            "name": "resize",
            "params": [
                {
                    "name": "width",
                    "description": "The new width for the canvas",
                    "type": "Integer",
                    "optional": true
                },
                {
                    "name": "height",
                    "description": "The new height for the canvas",
                    "type": "Integer",
                    "optional": true
                }
            ],
            "since": "@todo",
            "class": "EJSC.Drawing"
        },
        {
            "file": "src\\drawing\\Drawing.es6",
            "line": 595,
            "description": "Draws a bezier curve stemming from a control point from a previous bezier curve.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "method",
            "name": "smoothBezierCurveTo",
            "params": [
                {
                    "name": "cpx",
                    "description": "The x coordinate of the next control point",
                    "type": "Number"
                },
                {
                    "name": "cpy",
                    "description": "The y coordinate of the next control point",
                    "type": "Number"
                },
                {
                    "name": "x",
                    "description": "The end x coordinate of the curve",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The end y coordinate of the curve",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "since": "@todo",
            "class": "EJSC.Drawing"
        },
        {
            "file": "src\\drawing\\Drawing.es6",
            "line": 628,
            "description": "Draws a quadratic curve stemming from a control point from a previous quadratic curve.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "method",
            "name": "smoothQuadraticCurveTo",
            "params": [
                {
                    "name": "x",
                    "description": "The end x coordinate of the curve",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The end y coordinate of the curve",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "since": "@todo",
            "class": "EJSC.Drawing"
        },
        {
            "file": "src\\drawing\\Drawing.es6",
            "line": 659,
            "description": "Draws a stroke along the current drawing path.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "method",
            "name": "stroke",
            "params": [
                {
                    "name": "attributes",
                    "description": "The set of attributes to apply to the stroke",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "since": "@todo",
            "class": "EJSC.Drawing"
        },
        {
            "file": "src\\drawing\\Drawing.es6",
            "line": 680,
            "description": "Draws text on the canvas.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "method",
            "name": "text",
            "params": [
                {
                    "name": "text",
                    "description": "The text to draw on the canvas",
                    "type": "String"
                },
                {
                    "name": "x",
                    "description": "The x coordinate to draw the text at",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate to draw the text at",
                    "type": "Number"
                },
                {
                    "name": "styles",
                    "description": "The styles to apply to the text",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "since": "@todo",
            "class": "EJSC.Drawing"
        },
        {
            "file": "src\\drawing\\Drawing.es6",
            "line": 704,
            "description": "Draws a vertical line to a new position.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "method",
            "name": "verticalTo",
            "params": [
                {
                    "name": "y",
                    "description": "The y coordinate to draw to",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "since": "@todo",
            "class": "EJSC.Drawing"
        },
        {
            "file": "src\\drawing\\Drawing.es6",
            "line": 729,
            "description": "Holds the list of actions for the current path.",
            "itemtype": "property",
            "name": "path",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "since": "@todo",
            "class": "EJSC.Drawing"
        },
        {
            "file": "src\\drawing\\Drawing.es6",
            "line": 764,
            "description": "Selects the engine to use for the drawing.",
            "itemtype": "method",
            "name": "selectEngine",
            "access": "private",
            "tagname": "",
            "since": "@todo",
            "class": "EJSC.Drawing"
        },
        {
            "file": "src\\drawing\\Drawing.es6",
            "line": 781,
            "description": "Adds a new drawing engine to the list of available engines.",
            "itemtype": "method",
            "name": "choose",
            "static": 1,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "name",
                    "description": "Then engine name",
                    "type": "String"
                },
                {
                    "name": "engine",
                    "description": "The drawing engine",
                    "type": "EJSC.Engine"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Drawing"
        },
        {
            "file": "src\\drawing\\Drawing.es6",
            "line": 796,
            "description": "Holds the default styles for drawings.",
            "itemtype": "property",
            "name": "defaults",
            "type": "Object",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "since": "@todo",
            "class": "EJSC.Drawing"
        },
        {
            "file": "src\\drawing\\Drawing.es6",
            "line": 817,
            "description": "Holds the list of available drawing engines.",
            "itemtype": "property",
            "name": "engines",
            "type": "Object",
            "static": 1,
            "access": "private",
            "tagname": "",
            "since": "@todo",
            "class": "EJSC.Drawing"
        },
        {
            "file": "src\\formatter\\DateFormatter.es6",
            "line": 24,
            "description": "Defines the format to convert the date into.\n\nThe <b>formatString</b> property follows very closely to the PHP implementation of DateTime::format.\n\n<table class=\"border table table-sm\">\n<thead>\n<tr><th>Char</th><th>Description</th><th>Example(s)</th></tr>\n</thead>\n<tbody>\n<tr><th colspan=\"3\">Day</th></tr>\n<tr><td>d</td><td>Day of the month, 2 digits with leading zeros</td><td>01 to 31</td></tr>\n<tr><td>D</td><td>A textual representation of a day, three letters</td><td>Mon through Sun</td></tr>\n<tr><td>j</td><td>Day of the month without leading zeros</td><td>1 to 31</td></tr>\n<tr><td>l</td><td>A full textual representation of the day of the week</td><td>Sunday through Saturday</td></tr>\n<tr><th colspan=\"3\">Month</th></tr>\n<tr><td>F</td><td>A full textual representation of a month, such as January or March</td><td>January through December</td></tr>\n<tr><td>m</td><td>Numeric representation of a month, with leading zeros</td><td>01 through 12</td></tr>\n<tr><td>M</td><td>A short textual representation of a month, three letters</td><td>Jan through Dec</td></tr>\n<tr><td>n</td><td>Numeric representation of a month, without leading zeros</td><td>1 through 12</td></tr>\n<tr><th colspan=\"3\">Year</th></tr>\n<tr><td>Y</td><td>A full numeric representation of a year, 4 digits</td><td>Examples: 1999 or 2003</td></tr>\n<tr><td>y</td><td>A two digit representation of a year</td><td>Examples: 99 or 03</td></tr>\n<tr><th colspan=\"3\">Time</th></tr>\n<tr><td>a</td><td>Lowercase Ante meridiem and Post meridiem</td><td>am or pm</td></tr>\n<tr><td>A</td><td>Uppercase Ante meridiem and Post meridiem</td><td>AM or PM</td></tr>\n<tr><td>g</td><td>12-hour format of an hour without leading zeros</td><td>1 through 12</td></tr>\n<tr><td>G</td><td>24-hour format of an hour without leading zeros</td><td>0 through 23</td></tr>\n<tr><td>h</td><td>12-hour format of an hour with leading zeros</td><td>01 through 12</td></tr>\n<tr><td>H</td><td>24-hour format of an hour with leading zeros</td><td>00 through 23</td></tr>\n<tr><td>i</td><td>Minutes with leading zeros</td><td>00 to 59</td></tr>\n<tr><td>s</td><td>Seconds with leading zeros</td><td>00 through 59</td></tr>\n<tr><td>v</td><td>Milliseconds</td><td>Example: 654</td></tr>\n</tbody>\n</table>",
            "example": [
                "\n  ```\n  // Create a DateFormatter which will format the date like \"2020-08-13\"\n  new EJSC.DateFormatter({\n    formatString: 'Y-m-d'\n  });\n  ```"
            ],
            "required": 1,
            "itemtype": "attribute",
            "name": "formatString",
            "type": "String",
            "since": "3.0.0",
            "class": "EJSC.DateFormatter"
        },
        {
            "file": "src\\formatter\\DateFormatter.es6",
            "line": 91,
            "description": "Set this property to false to use the workstation local time to calculate dates.\nThis may be useful when passing in dates generated by JavaScript on the client machine to indicate current time.",
            "example": [
                "\n  ```\n  // Create a DateFormatter which will use local time instead of UTC\n  new EJSC.DateFormatter({\n    useUTC: false\n  });\n  ```"
            ],
            "itemtype": "attribute",
            "name": "useUTC",
            "type": "Boolean",
            "default": "true",
            "since": "3.0.0",
            "class": "EJSC.DateFormatter"
        },
        {
            "file": "src\\formatter\\DateFormatter.es6",
            "line": 134,
            "description": "Initializes the variable properties of the class.",
            "itemtype": "method",
            "name": "init",
            "access": "private",
            "tagname": "",
            "since": "3.0.0",
            "class": "EJSC.DateFormatter"
        },
        {
            "file": "src\\formatter\\DateFormatter.es6",
            "line": 149,
            "description": "Formats the value for display.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "method",
            "name": "format",
            "params": [
                {
                    "name": "value",
                    "description": "The value to format",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The formatted value",
                "type": "String"
            },
            "since": "1.0.0",
            "class": "EJSC.DateFormatter"
        },
        {
            "file": "src\\formatter\\Formatter.es6",
            "line": 17,
            "description": "Formats the value for display.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "method",
            "name": "format",
            "params": [
                {
                    "name": "value",
                    "description": "The value to format",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The formatted value",
                "type": "String"
            },
            "since": "1.0.0",
            "class": "EJSC.Formatter"
        },
        {
            "file": "src\\formatter\\NumberFormatter.es6",
            "line": 29,
            "description": "Defines the currency alignment.\n\nValid values: 'left', 'right'",
            "example": [
                "\n  ```\n  // Create a NumberFormatter that sets the currency alignment to 'right'\n  new EJSC.NumberFormatter({\n    // currencyAlign: 'left',\n    currencySymbol: '$'\n  });\n  // 0.1234 -> $0.1234\n\n  // Create a NumberFormatter that sets the currency alignment to 'right'\n  new EJSC.NumberFormatter({\n    currencyAlign: 'right',\n    currencySymbol: '$'\n  });\n  // 0.1234 -> 0.1234$\n  ```"
            ],
            "itemtype": "attribute",
            "name": "currencyAlign",
            "type": "String",
            "default": "'left'",
            "since": "3.0.0",
            "class": "EJSC.NumberFormatter"
        },
        {
            "file": "src\\formatter\\NumberFormatter.es6",
            "line": 73,
            "description": "Defines the currency position.\n\nValid values: 'inner', 'outer'",
            "example": [
                "\n  ```\n  // Create a NumberFormatter that sets the currency position to 'inner'\n  new EJSC.NumberFormatter({\n    currencyPosition: 'inner',\n    currencySymbol: '$'\n  });\n  // -0.1234 -> -$0.1234\n\n  // Create a NumberFormatter that keeps the currency position as 'outer'\n  new EJSC.NumberFormatter({\n    // currencyPosition: 'outer',\n    currencySymbol: '$'\n  });\n  // -0.1234 -> $-0.1234\n  ```"
            ],
            "itemtype": "attribute",
            "name": "currencyPosition",
            "type": "String",
            "default": "'outer'",
            "since": "3.0.0",
            "class": "EJSC.NumberFormatter"
        },
        {
            "file": "src\\formatter\\NumberFormatter.es6",
            "line": 117,
            "description": "Defines the currency symbol.",
            "example": [
                "\n  ```\n  // Create a NumberFormatter that sets the currency symbol to ','\n  new EJSC.NumberFormatter({\n    currencySymbol: '$'\n  });\n  // 0.1234 -> $0.1234\n  ```"
            ],
            "itemtype": "attribute",
            "name": "currencySymbol",
            "type": "String",
            "default": "''",
            "since": "3.0.0",
            "class": "EJSC.NumberFormatter"
        },
        {
            "file": "src\\formatter\\NumberFormatter.es6",
            "line": 151,
            "description": "Defines the symbol to place before the decimals.",
            "example": [
                "\n  ```\n  // Create a NumberFormatter that switches the decimal symbol to ','\n  new EJSC.NumberFormatter({\n    decimalSymbol: ','\n  });\n  // 0.1234 -> 0,1234\n  ```"
            ],
            "itemtype": "attribute",
            "name": "decimalSymbol",
            "type": "String",
            "default": "'.'",
            "since": "3.0.0",
            "class": "EJSC.NumberFormatter"
        },
        {
            "file": "src\\formatter\\NumberFormatter.es6",
            "line": 185,
            "description": "Defines the maximum decimals of the formatter.\n\nValid values are 0-14.",
            "example": [
                "\n  ```\n  // Create a NumberFormatter that allows a maximum of 2 decimals\n  new EJSC.NumberFormatter({\n    maximumDecimals: 2\n  });\n  // 0.1234 -> 0.12\n  ```"
            ],
            "itemtype": "attribute",
            "name": "maximumDecimals",
            "type": "Integer",
            "default": "14",
            "since": "3.0.0",
            "class": "EJSC.NumberFormatter"
        },
        {
            "file": "src\\formatter\\NumberFormatter.es6",
            "line": 221,
            "description": "Defines the minimum decimals of the formatter.\n\nValid values are 0-14.",
            "example": [
                "\n  ```\n  // Create a NumberFormatter that allows a minimum of 2 decimals\n  new EJSC.NumberFormatter({\n    minimumDecimals: 6\n  });\n  // 0.1234 -> 0.123400\n  ```"
            ],
            "itemtype": "attribute",
            "name": "minimumDecimals",
            "type": "Integer",
            "default": "0",
            "since": "3.0.0",
            "class": "EJSC.NumberFormatter"
        },
        {
            "file": "src\\formatter\\NumberFormatter.es6",
            "line": 257,
            "description": "Defines the prefix to use for negative numbers.",
            "example": [
                "\n  ```\n  // Create a NumberFormatter that sets the prefix for negative numbers to '('\n  new EJSC.NumberFormatter({\n    negativePrefix: '('\n  });\n  // -0.1234 -> (0.1234\n  ```"
            ],
            "itemtype": "attribute",
            "name": "negativePrefix",
            "type": "String",
            "default": "'-'",
            "since": "3.0.0",
            "class": "EJSC.NumberFormatter"
        },
        {
            "file": "src\\formatter\\NumberFormatter.es6",
            "line": 291,
            "description": "Defines the suffix to use for negative numbers.",
            "example": [
                "\n  ```\n  // Create a NumberFormatter that sets the suffix for negative numbers to ')'\n  new EJSC.NumberFormatter({\n    negativeSuffix: ')'\n  });\n  // -0.1234 -> -0.1234)\n  ```"
            ],
            "itemtype": "attribute",
            "name": "negativeSuffix",
            "type": "String",
            "default": "''",
            "since": "3.0.0",
            "class": "EJSC.NumberFormatter"
        },
        {
            "file": "src\\formatter\\NumberFormatter.es6",
            "line": 325,
            "description": "Defines the prefix to use for positive numbers.",
            "example": [
                "\n  ```\n  // Create a NumberFormatter that sets the prefix for positive numbers to '('\n  new EJSC.NumberFormatter({\n    positivePrefix: '('\n  });\n  // 0.1234 -> (0.1234\n  ```"
            ],
            "itemtype": "attribute",
            "name": "positivePrefix",
            "type": "String",
            "default": "'-'",
            "since": "3.0.0",
            "class": "EJSC.NumberFormatter"
        },
        {
            "file": "src\\formatter\\NumberFormatter.es6",
            "line": 359,
            "description": "Defines the suffix to use for positive numbers.",
            "example": [
                "\n  ```\n  // Create a NumberFormatter that sets the suffix for positive numbers to ')'\n  new EJSC.NumberFormatter({\n    positiveSuffix: ')'\n  });\n  // 0.1234 -> 0.1234)\n  ```"
            ],
            "itemtype": "attribute",
            "name": "positiveSuffix",
            "type": "String",
            "default": "''",
            "since": "3.0.0",
            "class": "EJSC.NumberFormatter"
        },
        {
            "file": "src\\formatter\\NumberFormatter.es6",
            "line": 393,
            "description": "Defines the symbol to use for separating the whole value into thousands.",
            "example": [
                "\n  ```\n  // Create a NumberFormatter that sets the thousands symbol to ','\n  new EJSC.NumberFormatter({\n    thousandsSymbol: ','\n  });\n  // 1234 -> 1,234\n  ```"
            ],
            "itemtype": "attribute",
            "name": "thousandsSymbol",
            "type": "String",
            "default": "''",
            "since": "3.0.0",
            "class": "EJSC.NumberFormatter"
        },
        {
            "file": "src\\formatter\\NumberFormatter.es6",
            "line": 427,
            "description": "Initializes the variable properties of the class.",
            "itemtype": "method",
            "name": "init",
            "access": "private",
            "tagname": "",
            "since": "3.0.0",
            "class": "EJSC.NumberFormatter"
        },
        {
            "file": "src\\formatter\\NumberFormatter.es6",
            "line": 452,
            "description": "Formats the value for display.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "method",
            "name": "format",
            "params": [
                {
                    "name": "value",
                    "description": "The value to format",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The formatted value",
                "type": "String"
            },
            "since": "1.0.0",
            "class": "EJSC.NumberFormatter"
        },
        {
            "file": "src\\series\\base\\DataSeries.es6",
            "line": 15,
            "description": "Holds the data for the series.\n\nThis is required, and therefore defined outside of the options array in the constructor.",
            "example": [
                "\n  ```\n  // Create a chart in the element with the id 'chart-container'\n  let chart = new EJSC['sparkline'].Chart('chart-container');\n\n  // Define a new LineSeries with a data set\n  let series = new EJSC['sparkline'].LineSeries([[0, 0], [1, 2], [2, 1]]);\n\n  // Update the data set\n  series.setData([[0, 1], [1, 2], [2, 0]]);\n\n  // Log out the current data set\n  console.log(series.getData());\n  // => [[0, 1], [1, 2], [2, 0]]\n  ```"
            ],
            "itemtype": "attribute",
            "name": "data",
            "type": "Array",
            "required": 1,
            "default": "[]",
            "since": "@todo",
            "class": "EJSC.DataSeries"
        },
        {
            "file": "src\\series\\base\\DataSeries.es6",
            "line": 59,
            "description": "Holds the list of data points for each axis type.",
            "itemtype": "property",
            "name": "dataPoints",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "default": "{}",
            "since": "@todo",
            "class": "EJSC.DataSeries"
        },
        {
            "file": "src\\series\\base\\PlotSeries.es6",
            "line": 15,
            "description": "Defines the spacing around the series.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "attribute",
            "name": "spacing",
            "type": "Number",
            "default": "0",
            "since": "@todo",
            "class": "EJSC.PlotSeries"
        },
        {
            "file": "src\\series\\base\\PlotSeries.es6",
            "line": 45,
            "description": "Defines the x axis to draw on.\n\nValid values are: 'bottom', 'top'.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "attribute",
            "name": "xAxis",
            "type": "String",
            "default": "'bottom'",
            "since": "@todo",
            "class": "EJSC.PlotSeries"
        },
        {
            "file": "src\\series\\base\\PlotSeries.es6",
            "line": 77,
            "description": "Defines the y axis to draw on.\n\nValid values are: 'left', 'right'.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "attribute",
            "name": "yAxis",
            "type": "String",
            "default": "'left'",
            "since": "@todo",
            "class": "EJSC.PlotSeries"
        },
        {
            "file": "src\\series\\base\\PlotSeries.es6",
            "line": 120,
            "description": "Calculates the extremes for the series based on its data.",
            "itemtype": "method",
            "name": "calculateExtremes",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "The new extremes",
                "type": "Object"
            },
            "since": "@todo",
            "class": "EJSC.PlotSeries"
        },
        {
            "file": "src\\series\\base\\PlotSeries.es6",
            "line": 141,
            "description": "Returns the list of visible points.",
            "itemtype": "method",
            "name": "getVisiblePoints",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "The list of visible points",
                "type": "Array"
            },
            "since": "@todo",
            "class": "EJSC.PlotSeries"
        },
        {
            "file": "src\\series\\base\\PlotSeries.es6",
            "line": 154,
            "description": "Returns a reference to the x axis",
            "itemtype": "method",
            "name": "referenceXAxis",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "The x axis",
                "type": "EJSC['sparkline'].Axis"
            },
            "since": "@todo",
            "class": "EJSC.PlotSeries"
        },
        {
            "file": "src\\series\\base\\PlotSeries.es6",
            "line": 167,
            "description": "Returns a reference to the y axis",
            "itemtype": "method",
            "name": "referenceXAxis",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "The y axis",
                "type": "EJSC['sparkline'].Axis"
            },
            "since": "@todo",
            "class": "EJSC.PlotSeries"
        },
        {
            "file": "src\\series\\base\\Series.es6",
            "line": 14,
            "description": "Defines the color of the series.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "attribute",
            "name": "color",
            "type": "String",
            "default": "null",
            "since": "@todo",
            "class": "EJSC.Series"
        },
        {
            "file": "src\\series\\base\\Series.es6",
            "line": 44,
            "description": "Defines the title of the series.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "attribute",
            "name": "title",
            "type": "String",
            "default": "null",
            "since": "@todo",
            "class": "EJSC.Series"
        },
        {
            "file": "src\\series\\base\\Series.es6",
            "line": 74,
            "description": "Defines if the series if visible or not.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "attribute",
            "name": "visible",
            "type": "Boolean",
            "default": "true",
            "since": "@todo",
            "class": "EJSC.Series"
        },
        {
            "file": "src\\series\\base\\Series.es6",
            "line": 104,
            "description": "Holds a pointer to this series' owner chart.",
            "itemtype": "property",
            "name": "chart",
            "type": "EJSC['sparkline'].Chart",
            "default": "null",
            "since": "@todo",
            "class": "EJSC.Series"
        },
        {
            "file": "src\\series\\base\\Series.es6",
            "line": 132,
            "description": "Draws the series to its owner chart's drawing engine.",
            "itemtype": "method",
            "name": "draw",
            "access": "private",
            "tagname": "",
            "since": "@todo",
            "class": "EJSC.Series"
        },
        {
            "file": "src\\series\\base\\Series.es6",
            "line": 143,
            "description": "Determines if the series is visible or not.",
            "itemtype": "method",
            "name": "isVisible",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "If the series is visible or not",
                "type": "Boolean"
            },
            "since": "@todo",
            "class": "EJSC.Series"
        },
        {
            "file": "src\\series\\base\\Series.es6",
            "line": 156,
            "description": "Links the series to its owner chart.",
            "itemtype": "method",
            "name": "prepare",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "chart",
                    "description": "The owner chart",
                    "type": "EJSC['sparkline'].Chart"
                },
                {
                    "name": "options",
                    "description": "Default options to apply if not defined",
                    "type": "Object"
                }
            ],
            "since": "@todo",
            "class": "EJSC.Series"
        },
        {
            "file": "src\\series\\base\\Series.es6",
            "line": 173,
            "description": "Sets the given opacity of a given color.",
            "itemtype": "method",
            "name": "setOpacity",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "color",
                    "description": "The color",
                    "type": "String"
                },
                {
                    "name": "opacity",
                    "description": "The opacity",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The final color",
                "type": "String"
            },
            "since": "@todo",
            "class": "EJSC.Series"
        },
        {
            "file": "src\\series\\base\\Series.es6",
            "line": 194,
            "description": "Fires when a property of the class has changed.",
            "itemtype": "method",
            "name": "update",
            "access": "private",
            "tagname": "",
            "since": "@todo",
            "class": "EJSC.Series"
        },
        {
            "file": "src\\series\\base\\XYSeries.es6",
            "line": 15,
            "description": "Holds the list of data points for each axis type.",
            "itemtype": "property",
            "name": "dataPoints",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "default": "{ x: ['x'], y: ['y'] }",
            "since": "@todo",
            "class": "EJSC.XYSeries"
        },
        {
            "file": "src\\series\\AreaSeries.es6",
            "line": 23,
            "description": "Defines the styles for the area fill.",
            "example": [
                "\n  ```\n  // Create a chart in the element with the id 'chart-container'\n  let chart = EJSC['sparkline'].Chart('chart-container');\n\n  // Define a new AreaSeries with the area's background color as light grey\n  let series = new EJSC['sparkline'].AreaSeries([[0, 0], [1, 2], [2, 1]], {\n    area: { fillStyle: 'rgb(200, 200, 200)' }\n  });\n\n  // Update the area's background color to light blue\n  series.setArea({\n    fillStyle: 'rgb(200, 200, 255)'\n  });\n\n  // Log out the current area styles\n  console.log(series.getArea());\n  // => { fillStyle: 'rgb(200, 200, 255)' }\n  ```"
            ],
            "itemtype": "attribute",
            "name": "area",
            "type": "Object",
            "params": [
                {
                    "name": "area.fillStyle",
                    "description": "The background color of the area fill. (Default: null)",
                    "type": "String"
                }
            ],
            "since": "@todo",
            "class": "EJSC.AreaSeries"
        },
        {
            "file": "src\\series\\AreaSeries.es6",
            "line": 68,
            "description": "Defines the zero coordinate for the series.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "attribute",
            "name": "zeroCoordinate",
            "type": "Number",
            "default": "0",
            "since": "@todo",
            "class": "EJSC.AreaSeries"
        },
        {
            "file": "src\\series\\AreaSeries.es6",
            "line": 110,
            "description": "Calculates the extremes for the series based off of its data.",
            "itemtype": "method",
            "name": "calculateExtremes",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "The calculated extremes",
                "type": "Object"
            },
            "since": "@todo",
            "class": "EJSC.AreaSeries"
        },
        {
            "file": "src\\series\\AreaSeries.es6",
            "line": 131,
            "description": "Draws the series to the chart.",
            "itemtype": "method",
            "name": "draw",
            "access": "private",
            "tagname": "",
            "since": "@todo",
            "class": "EJSC.AreaSeries"
        },
        {
            "file": "src\\series\\BarSeries.es6",
            "line": 24,
            "description": "Defines the styles for the bar.",
            "example": [
                "\n  ```\n    // TODO:\n  ```"
            ],
            "itemtype": "attribute",
            "name": "bar",
            "type": "Object",
            "params": [
                {
                    "name": "bar.size",
                    "description": "The amount of available space the bars should take up. (Default: 0.8)",
                    "type": "Number"
                },
                {
                    "name": "bar.style",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "bar.style.fillStyle",
                    "description": "The background color of the bar. (Default: null)",
                    "type": "String"
                },
                {
                    "name": "bar.style.lineWidth",
                    "description": "The border width of the bar. (Default: 1)",
                    "type": "Integer"
                },
                {
                    "name": "bar.style.strokeStyle",
                    "description": "The border color of the bar. (Default: null)",
                    "type": "String"
                }
            ],
            "since": "@todo",
            "class": "EJSC.BarSeries"
        },
        {
            "file": "src\\series\\BarSeries.es6",
            "line": 58,
            "description": "Defines the zero coordinate for the series.",
            "example": [
                "\n  ```\n    // TODO:\n  ```"
            ],
            "itemtype": "attribute",
            "name": "zeroCoordinate",
            "type": "Number",
            "default": "0",
            "since": "@todo",
            "class": "EJSC.BarSeries"
        },
        {
            "file": "src\\series\\BarSeries.es6",
            "line": 105,
            "description": "Calculates the boundary points for a bar in the series.",
            "itemtype": "method",
            "name": "calculateBarPoints",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "The boundary points",
                "type": "Object"
            },
            "since": "@todo",
            "class": "EJSC.BarSeries"
        },
        {
            "file": "src\\series\\BarSeries.es6",
            "line": 127,
            "description": "Calculates the boundary pixels for a bar in the series.",
            "itemtype": "method",
            "name": "calculateBarPixels",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "The boundary pixels",
                "type": "Object"
            },
            "since": "@todo",
            "class": "EJSC.BarSeries"
        },
        {
            "file": "src\\series\\BarSeries.es6",
            "line": 171,
            "description": "Calculates the size (width) for a bar in the series.",
            "itemtype": "method",
            "name": "calculateBarPixels",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "The size of the bar",
                "type": "Number"
            },
            "since": "@todo",
            "class": "EJSC.BarSeries"
        },
        {
            "file": "src\\series\\BarSeries.es6",
            "line": 202,
            "description": "Calculates the extremes for the series based off of its data.",
            "itemtype": "method",
            "name": "calculateExtremes",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "The calculated extremes",
                "type": "Object"
            },
            "since": "@todo",
            "class": "EJSC.BarSeries"
        },
        {
            "file": "src\\series\\BarSeries.es6",
            "line": 228,
            "description": "Draws the series to the chart.",
            "itemtype": "method",
            "name": "draw",
            "access": "private",
            "tagname": "",
            "since": "@todo",
            "class": "EJSC.BarSeries"
        },
        {
            "file": "src\\series\\BarSeries.es6",
            "line": 266,
            "description": "Calculates the spacing needed for the series.",
            "itemtype": "method",
            "name": "calculateSpacing",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "The spacing needed for the series",
                "type": "Number"
            },
            "since": "@todo",
            "class": "EJSC.BarSeries"
        },
        {
            "file": "src\\series\\BarSeries.es6",
            "line": 291,
            "description": "Determines if the given point is in range of the cursor or not.",
            "itemtype": "method",
            "name": "isPointInRange",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "point",
                    "description": "The point",
                    "type": "EJSC.Point"
                },
                {
                    "name": "event",
                    "description": "The mouse event",
                    "type": "MouseEvent"
                }
            ],
            "return": {
                "description": "If the point is in range or not",
                "type": "Boolean"
            },
            "since": "@todo",
            "class": "EJSC.BarSeries"
        },
        {
            "file": "src\\series\\BarSeries.es6",
            "line": 324,
            "description": "Determines if a point is currently visible or not.",
            "itemtype": "method",
            "name": "isPointVisible",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "point",
                    "description": "The point to determine",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "If the point is currently visible or not",
                "type": "Boolean"
            },
            "since": "@todo",
            "class": "EJSC.BarSeries"
        },
        {
            "file": "src\\series\\LineSeries.es6",
            "line": 23,
            "description": "Defines the style options for the drawn line.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "attribute",
            "name": "line",
            "type": "Object",
            "params": [
                {
                    "name": "line.lineWidth",
                    "description": "Defines the width of the line. (Default: 1)",
                    "type": "Integer"
                },
                {
                    "name": "line.strokeStyle",
                    "description": "Defines the color of the line. (Default: null)",
                    "type": "String"
                }
            ],
            "since": "@todo",
            "class": "EJSC.LineSeries"
        },
        {
            "file": "src\\series\\LineSeries.es6",
            "line": 54,
            "description": "Determines if the drawing routine should draw as steps.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "attribute",
            "name": "step",
            "type": "Boolean",
            "default": "false",
            "since": "@todo",
            "class": "EJSC.LineSeries"
        },
        {
            "file": "src\\series\\LineSeries.es6",
            "line": 97,
            "description": "Builds the drawing path.",
            "itemtype": "method",
            "name": "buildPath",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "The path to draw",
                "type": "Array"
            },
            "since": "@todo",
            "class": "EJSC.LineSeries"
        },
        {
            "file": "src\\series\\LineSeries.es6",
            "line": 136,
            "description": "Calculates the spacing needed for the series.",
            "itemtype": "method",
            "name": "calculateSpacing",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "The spacing needed for the series",
                "type": "Number"
            },
            "since": "@todo",
            "class": "EJSC.LineSeries"
        },
        {
            "file": "src\\series\\LineSeries.es6",
            "line": 166,
            "description": "Clips the draw path to the given zoom.",
            "itemtype": "method",
            "name": "clipPath",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "path",
                    "description": "The draw path",
                    "type": "Array"
                }
            ],
            "since": "@todo",
            "class": "EJSC.LineSeries"
        },
        {
            "file": "src\\series\\LineSeries.es6",
            "line": 587,
            "description": "Draws the series to the chart.",
            "itemtype": "method",
            "name": "draw",
            "access": "private",
            "tagname": "",
            "since": "@todo",
            "class": "EJSC.LineSeries"
        },
        {
            "file": "src\\series\\ScatterSeries.es6",
            "line": 23,
            "description": "Defines the style options for the points.",
            "example": [
                "\n  ```\n  // TODO:\n  ```"
            ],
            "itemtype": "attribute",
            "name": "points",
            "type": "Object",
            "params": [
                {
                    "name": "points.shape",
                    "description": "Defines the shape of the points. (Default: 'circle') (Values: 'box', 'circle', 'diamond', 'triangle')",
                    "type": "String"
                },
                {
                    "name": "points.size",
                    "description": "Defines the size of the points. (Default: 5)",
                    "type": "Integer"
                },
                {
                    "name": "points.style",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "points.style.fillStyle",
                    "description": "Defines the fill color. (Default: null)",
                    "type": "String"
                },
                {
                    "name": "points.style.lineWidth",
                    "description": "Defines the width of the line. (Default: 2)",
                    "type": "Integer"
                },
                {
                    "name": "points.style.strokeStyle",
                    "description": "Defines the color of the line. (Default: null)",
                    "type": "String"
                },
                {
                    "name": "points.visible",
                    "description": "Defines if the points should be drawn. Only applies to child classes of ScatterSeries. (Default: false)",
                    "type": "Boolean"
                }
            ],
            "since": "@todo",
            "class": "EJSC.ScatterSeries"
        },
        {
            "file": "src\\series\\ScatterSeries.es6",
            "line": 77,
            "description": "Calculates the extremes for the series based on its data.",
            "itemtype": "method",
            "name": "calculateExtremes",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "The new extremes",
                "type": "Object"
            },
            "since": "@todo",
            "class": "EJSC.ScatterSeries"
        },
        {
            "file": "src\\series\\ScatterSeries.es6",
            "line": 100,
            "description": "Calculates the spacing needed for the series.",
            "itemtype": "method",
            "name": "calculateSpacing",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "The spacing needed for the series",
                "type": "Number"
            },
            "since": "@todo",
            "class": "EJSC.ScatterSeries"
        },
        {
            "file": "src\\series\\ScatterSeries.es6",
            "line": 124,
            "description": "Draws the series.",
            "itemtype": "method",
            "name": "draw",
            "access": "private",
            "tagname": "",
            "since": "@todo",
            "class": "EJSC.ScatterSeries"
        },
        {
            "file": "src\\series\\ScatterSeries.es6",
            "line": 187,
            "description": "Determines if a point is currently visible or not.",
            "itemtype": "method",
            "name": "isPointVisible",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "point",
                    "description": "The point to determine",
                    "type": "Array<Number, Number>"
                }
            ],
            "return": {
                "description": "If the point is currently visible or not",
                "type": "Boolean"
            },
            "since": "@todo",
            "class": "EJSC.ScatterSeries"
        },
        {
            "file": "src\\util\\Array.es6",
            "line": 14,
            "description": "Iterates over elements of array, returning an array of all elements predicate returns truthy for.\nThe predicate is invoked with three arguments: (value, key, array).",
            "example": [
                "\n  ```\n  $Array([0, 1, 2]).filter((value, key, array) => value > 0).result;\n  // => [1, 2]\n  ```"
            ],
            "itemtype": "method",
            "name": "filter",
            "params": [
                {
                    "name": "predicate",
                    "description": "The function invoked per iteration",
                    "type": "Function"
                }
            ],
            "chainable": 1,
            "since": "@todo",
            "class": "$Array"
        },
        {
            "file": "src\\util\\Array.es6",
            "line": 37,
            "description": "Iterates over elements of array and invokes iteratee for each element.\nThe iteratee is invoked with three arguments: (value, key, array).\nIteratee functions may exit iteration early by explicitly returning false.",
            "example": [
                "\n  ```\n  $Array([1, 2]).forEach((value, key, array) => console.log(value));\n  // => Logs '1' then '2'.\n  ```"
            ],
            "itemtype": "method",
            "name": "forEach",
            "params": [
                {
                    "name": "predicate",
                    "description": "The function invoked per iteration",
                    "type": "Function"
                }
            ],
            "chainable": 1,
            "since": "@todo",
            "class": "$Array"
        },
        {
            "file": "src\\util\\Array.es6",
            "line": 67,
            "description": "Checks if the given value exists in the given array.",
            "example": [
                "\n  ```\n  $Array([1, 2, 3]).includes(1);\n  // => true\n  ```"
            ],
            "itemtype": "method",
            "name": "includes",
            "params": [
                {
                    "name": "valueToFind",
                    "description": "The value to search for",
                    "type": "*"
                },
                {
                    "name": "fromIndex",
                    "description": "The index to search from (for arrays)",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "If value is found",
                "type": "Boolean"
            },
            "since": "@todo",
            "class": "$Array"
        },
        {
            "file": "src\\util\\Array.es6",
            "line": 110,
            "description": "Transforms an array into a new accumulator array.",
            "example": [
                "\n  ```\n  $Array([2, 3, 4]).transform((result, n) => {\n    result.push(n *= n);\n    return n % 2 == 0;\n  }, []).result;\n  // => [4, 9]\n  ```"
            ],
            "itemtype": "method",
            "name": "transform",
            "params": [
                {
                    "name": "predicate",
                    "description": "The function invoked per iteration",
                    "type": "Function",
                    "optional": true,
                    "optdefault": "identity"
                },
                {
                    "name": "accumulator",
                    "description": "The custom accumulator",
                    "type": "*",
                    "optional": true,
                    "optdefault": "[]"
                }
            ],
            "chainable": 1,
            "since": "@todo",
            "class": "$Array"
        },
        {
            "file": "src\\util\\Array.es6",
            "line": 139,
            "description": "Creates an array excluding all given values using SameValueZero for equality comparisons.",
            "example": [
                "\n  ```\n  $Array([2, 1, 2, 3]).without(1, 2).result;\n  // => [3]\n  ```"
            ],
            "itemtype": "method",
            "name": "without",
            "params": [
                {
                    "name": "values",
                    "description": "The values to exclude",
                    "type": "*",
                    "optional": true,
                    "multiple": true
                }
            ],
            "chainable": 1,
            "since": "@todo",
            "class": "$Array"
        },
        {
            "file": "src\\util\\Array.es6",
            "line": 162,
            "description": "Iterates over elements of array, returning an array of all elements predicate returns truthy for.\nThe predicate is invoked with three arguments: (value, key, array).",
            "example": [
                "\n  ```\n  $Array.filter([0, 1, 2], (value, key, array) => value > 0);\n  // => [1, 2]\n  ```"
            ],
            "static": 1,
            "itemtype": "method",
            "name": "filter",
            "params": [
                {
                    "name": "array",
                    "description": "The array to iterate over",
                    "type": "Array"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked per iteration",
                    "type": "Function",
                    "optional": true,
                    "optdefault": "identity"
                }
            ],
            "return": {
                "description": "The new filterd array",
                "type": "Array"
            },
            "since": "@todo",
            "class": "$Array"
        },
        {
            "file": "src\\util\\Array.es6",
            "line": 181,
            "description": "Iterates over elements of array and invokes iteratee for each element.\nThe iteratee is invoked with three arguments: (value, key, array).\nIteratee functions may exit iteration early by explicitly returning false.",
            "example": [
                "\n  ```\n  $Array.forEach([1, 2], (value, key, array) => console.log(value));\n  // => Logs '1' then '2'.\n  ```"
            ],
            "static": 1,
            "itemtype": "method",
            "name": "forEach",
            "params": [
                {
                    "name": "array",
                    "description": "The array to iterate over",
                    "type": "Array"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked per iteration",
                    "type": "Function",
                    "optional": true,
                    "optdefault": "identity"
                }
            ],
            "return": {
                "description": "The array",
                "type": "Array"
            },
            "since": "@todo",
            "class": "$Array"
        },
        {
            "file": "src\\util\\Array.es6",
            "line": 204,
            "description": "Checks if the given value exists in the given array.",
            "example": [
                "\n  ```\n  $Array.includes([1, 2, 3], 1);\n  // => true\n  ```"
            ],
            "static": 1,
            "itemtype": "method",
            "name": "includes",
            "params": [
                {
                    "name": "array",
                    "description": "The array to inspect",
                    "type": "Array"
                },
                {
                    "name": "valueToFind",
                    "description": "The value to search for",
                    "type": "*"
                },
                {
                    "name": "fromIndex",
                    "description": "The index to search from (for arrays)",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "If value is found",
                "type": "Boolean"
            },
            "since": "@todo",
            "class": "$Array"
        },
        {
            "file": "src\\util\\Array.es6",
            "line": 232,
            "description": "Transforms an array into a new accumulator array.",
            "example": [
                "\n  ```\n  $Array.transform([2, 3, 4], (result, n) => {\n    result.push(n *= n);\n    return n % 2 == 0;\n  }, []);\n  // => [4, 9]\n  ```"
            ],
            "itemtype": "method",
            "name": "transform",
            "params": [
                {
                    "name": "array",
                    "description": "The array to iterate over",
                    "type": "Array"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked per iteration",
                    "type": "Function",
                    "optional": true,
                    "optdefault": "identity"
                },
                {
                    "name": "accumulator",
                    "description": "The custom accumulator",
                    "type": "*",
                    "optional": true,
                    "optdefault": "[]"
                }
            ],
            "return": {
                "description": "The accumulated value",
                "type": "*"
            },
            "since": "@todo",
            "class": "$Array"
        },
        {
            "file": "src\\util\\Array.es6",
            "line": 253,
            "description": "Creates an array excluding all given values using SameValueZero for equality comparisons.",
            "example": [
                "\n  ```\n  $Array.without([2, 1, 2, 3], 1, 2);\n  // => [3]\n  ```"
            ],
            "static": 1,
            "itemtype": "method",
            "name": "without",
            "params": [
                {
                    "name": "array",
                    "description": "The array to inspect",
                    "type": "Array"
                },
                {
                    "name": "values",
                    "description": "The values to exclude",
                    "type": "*",
                    "optional": true,
                    "multiple": true
                }
            ],
            "return": {
                "description": "The new array of filtered values",
                "type": "Array"
            },
            "since": "@todo",
            "class": "$Array"
        },
        {
            "file": "src\\util\\Element.es6",
            "line": 15,
            "description": "Attach an event handler function for one or more events to the element.",
            "example": [
                "\n  ```\n  // TODO: $Element().on example\n  ```"
            ],
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "events",
                    "description": "The event(s) to listen for",
                    "type": "Array|String"
                },
                {
                    "name": "callback",
                    "description": "The function to call when the event occurs",
                    "type": "Function"
                }
            ],
            "chainable": 1,
            "since": "@todo",
            "class": "$Element"
        },
        {
            "file": "src\\util\\Element.es6",
            "line": 68,
            "description": "Attach an event handler function for one or more events to the element.",
            "example": [
                "\n  ```\n  // TODO: $Element.on example\n  ```"
            ],
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "events",
                    "description": "The event(s) to listen for",
                    "type": "Array|String"
                },
                {
                    "name": "callback",
                    "description": "The function to call when the event occurs",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "The element",
                "type": "Element"
            },
            "since": "@todo",
            "class": "$Element"
        },
        {
            "file": "src\\util\\Number.es6",
            "line": 15,
            "description": "Clamps number within the inclusive lower and upper bounds.",
            "example": [
                "\n  ```\n  $Number(-10).clamp(-5, 5).result;\n  // => -5\n\n  $Number(10).clamp(-5, 5).result;\n  // => 5\n  ```"
            ],
            "itemtype": "method",
            "name": "clamp",
            "params": [
                {
                    "name": "lower",
                    "description": "The lower bound",
                    "type": "Number"
                },
                {
                    "name": "uppser",
                    "description": "The upper bound",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "since": "@todo",
            "class": "$Number"
        },
        {
            "file": "src\\util\\Number.es6",
            "line": 41,
            "description": "Computes number rounded to precision.",
            "example": [
                "\n  ```\n  $Number(4.006).round().result;\n  // => 4\n\n  $Number(4.006).round(2).result;\n  // => 4.01\n\n  $Number(4060).round(-2).result;\n  // => 4100\n  ```"
            ],
            "itemtype": "method",
            "name": "round",
            "params": [
                {
                    "name": "precision",
                    "description": "The precision to round to",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "chainable": 1,
            "since": "@todo",
            "class": "$Number"
        },
        {
            "file": "src\\util\\Number.es6",
            "line": 70,
            "description": "Clamps number within the inclusive lower and upper bounds.",
            "example": [
                "\n  ```\n  $Number.clamp(-10, -5, 5);\n  // => -5\n\n  $Number.clamp(10, -5, 5);\n  // => 5\n  ```"
            ],
            "static": 1,
            "itemtype": "method",
            "name": "clamp",
            "params": [
                {
                    "name": "number",
                    "description": "The number to clamp",
                    "type": "Number"
                },
                {
                    "name": "lower",
                    "description": "The lower bound",
                    "type": "Number"
                },
                {
                    "name": "uppser",
                    "description": "The upper bound",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The clamped value",
                "type": "Number"
            },
            "since": "@todo",
            "class": "$Number"
        },
        {
            "file": "src\\util\\Number.es6",
            "line": 92,
            "description": "Computes the maximum value of array.\nIf array is empty or falsey, undefined is returned.",
            "example": [
                "\n  ```\n  $Number.max(4, 2, 8, 6);\n  // => 8\n\n  $Number.max();\n  // => null\n  ```"
            ],
            "static": 1,
            "itemtype": "method",
            "name": "max",
            "params": [
                {
                    "name": "numbers",
                    "description": "The numbers to iterate over",
                    "type": "...Array"
                }
            ],
            "return": {
                "description": "The maximum value",
                "type": "Number"
            },
            "since": "@todo",
            "class": "$Number"
        },
        {
            "file": "src\\util\\Number.es6",
            "line": 122,
            "description": "Computes the minimum value of array.\nIf array is empty or falsey, undefined is returned.",
            "example": [
                "\n  ```\n  $Number.min(4, 2, 8, 6);\n  // => 2\n\n  $Number.min();\n  // => null\n  ```"
            ],
            "static": 1,
            "itemtype": "method",
            "name": "min",
            "params": [
                {
                    "name": "numbers",
                    "description": "The numbers to iterate over",
                    "type": "...Array"
                }
            ],
            "return": {
                "description": "The minimum value",
                "type": "Number"
            },
            "since": "@todo",
            "class": "$Number"
        },
        {
            "file": "src\\util\\Number.es6",
            "line": 152,
            "description": "Computes number rounded to precision.",
            "example": [
                "\n  ```\n  $Number.round(4.006);\n  // => 4\n\n  $Number.round(4.006, 2);\n  // => 4.01\n\n  $Number.round(4060, -2);\n  // => 4100\n  ```"
            ],
            "static": 1,
            "itemtype": "method",
            "name": "round",
            "params": [
                {
                    "name": "number",
                    "description": "The number to round",
                    "type": "Number"
                },
                {
                    "name": "precision",
                    "description": "The precision to round to",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "The rounded value",
                "type": "Number"
            },
            "since": "@todo",
            "class": "$Number"
        },
        {
            "file": "src\\util\\Object.es6",
            "line": 15,
            "description": "Iterates over elements of object, returning an array of all elements predicate returns truthy for.\nThe predicate is invoked with three arguments: (value, key, object).",
            "example": [
                "\n  ```\n  $Object({ a: 0, b: 1, c: 2 }).filter((value, key, object) => value > 0).result;\n  // => { b: 1, c: 2 }\n  ```"
            ],
            "itemtype": "method",
            "name": "filter",
            "params": [
                {
                    "name": "predicate",
                    "description": "The function invoked per iteration",
                    "type": "Function"
                }
            ],
            "chainable": 1,
            "since": "@todo",
            "class": "$Object"
        },
        {
            "file": "src\\util\\Object.es6",
            "line": 43,
            "description": "Iterates over elements of object and invokes iteratee for each element.\nThe iteratee is invoked with three arguments: (value, key, object).\nIteratee functions may exit iteration early by explicitly returning false.",
            "example": [
                "\n  ```\n  $Object({ a: 1, b: 2 }).forEach((value, key, object) => console.log(key));\n  // => Logs 'a' then 'b' (iteration order is not guaranteed).\n  ```"
            ],
            "itemtype": "method",
            "name": "forEach",
            "params": [
                {
                    "name": "predicate",
                    "description": "The function invoked per iteration",
                    "type": "Function"
                }
            ],
            "since": "@todo",
            "class": "$Object"
        },
        {
            "file": "src\\util\\Object.es6",
            "line": 87,
            "description": "Checks if path is a direct property of object.",
            "example": [
                "\n  ```\n  $Object({ a: { b: 2 } }).has('a');\n  // => true\n\n  $Object({ a: { b: 2 } }).has('a.b');\n  // => true\n\n  $Object({ a: { b: 2 } }).has(['a', 'b']);\n  // => true\n\n  $Object({ a: { b: 2 } }).has('c');\n  // => false\n  ```"
            ],
            "itemtype": "method",
            "name": "has",
            "params": [
                {
                    "name": "path",
                    "description": "The path to check",
                    "type": "Array|String"
                }
            ],
            "return": {
                "description": "If path exists",
                "type": "Boolean"
            },
            "since": "@todo",
            "class": "$Object"
        },
        {
            "file": "src\\util\\Object.es6",
            "line": 157,
            "description": "Iterates over elements of object, returning an array of all elements predicate returns truthy for.\nThe predicate is invoked with three arguments: (value, key, object).",
            "example": [
                "\n  ```\n  $Object.filter({ a: 0, b: 1, c: 2 }, (value, key, object) => value > 0);\n  // => { b: 1, c: 2 }\n  ```"
            ],
            "static": 1,
            "itemtype": "method",
            "name": "filter",
            "params": [
                {
                    "name": "object",
                    "description": "The object to iterate over",
                    "type": "Object"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked per iteration",
                    "type": "Function",
                    "optional": true,
                    "optdefault": "identity"
                }
            ],
            "return": {
                "description": "The filtered values",
                "type": "Object"
            },
            "since": "@todo",
            "class": "$Object"
        },
        {
            "file": "src\\util\\Object.es6",
            "line": 176,
            "description": "Iterates over elements of object and invokes iteratee for each element.\nThe iteratee is invoked with three arguments: (value, key, object).\nIteratee functions may exit iteration early by explicitly returning false.",
            "example": [
                "\n  ```\n  $Object.forEach({ a: 1, b: 2 }, (value, key, object) => console.log(key));\n  // => Logs 'a' then 'b' (iteration order is not guaranteed).\n  ```"
            ],
            "static": 1,
            "itemtype": "method",
            "name": "forEach",
            "params": [
                {
                    "name": "object",
                    "description": "The object to iterate over",
                    "type": "Object"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked per iteration",
                    "type": "Function",
                    "optional": true,
                    "optdefault": "identity"
                }
            ],
            "since": "@todo",
            "class": "$Object"
        },
        {
            "file": "src\\util\\Object.es6",
            "line": 198,
            "description": "Checks if path is a direct property of object.",
            "example": [
                "\n  ```\n  $Object.has({ a: { b: 2 } }, 'a');\n  // => true\n\n  $Object.has({ a: { b: 2 } }, 'a.b');\n  // => true\n\n  $Object.has({ a: { b: 2 } }, ['a', 'b']);\n  // => true\n\n  $Object.has({ a: { b: 2 } }, 'c');\n  // => false\n  ```"
            ],
            "static": 1,
            "itemtype": "method",
            "name": "has",
            "params": [
                {
                    "name": "object",
                    "description": "The object to query",
                    "type": "Object"
                },
                {
                    "name": "path",
                    "description": "The path to check",
                    "type": "Array|String"
                }
            ],
            "return": {
                "description": "If path exists",
                "type": "Boolean"
            },
            "since": "@todo",
            "class": "$Object"
        },
        {
            "file": "src\\util\\Object.es6",
            "line": 225,
            "description": "Checks if value is likely an arguments object.",
            "example": [
                "\n  ```\n  $Object.isArguments(function() { return arguments; }());\n  // => true\n\n  $Object.isArguments([1, 2, 3]);\n  // => false\n  ```"
            ],
            "static": 1,
            "itemtype": "method",
            "name": "isArguments",
            "params": [
                {
                    "name": "value",
                    "description": "The value to test",
                    "type": "*"
                }
            ],
            "return": {
                "description": "If value is an arguments array",
                "type": "Boolean"
            },
            "since": "@todo",
            "class": "$Object"
        },
        {
            "file": "src\\util\\Object.es6",
            "line": 245,
            "description": "Checks if value is classified as an Array object.",
            "example": [
                "\n  ```\n  $Object.isArray([1, 2, 3]);\n  // => true\n\n  $Object.isArray(document.body.children);\n  // => false\n\n  $Object.isArray('abc');\n  // => false\n\n  $Object.isArray(function() {});\n  // => false\n  ```"
            ],
            "static": 1,
            "itemtype": "method",
            "name": "isArray",
            "params": [
                {
                    "name": "value",
                    "description": "The value to test",
                    "type": "*"
                }
            ],
            "return": {
                "description": "If value is an array",
                "type": "Boolean"
            },
            "since": "@todo",
            "class": "$Object"
        },
        {
            "file": "src\\util\\Object.es6",
            "line": 271,
            "description": "Checks if value is likely a DOM element.",
            "example": [
                "\n  ```\n  $Object.isElement(document.body);\n  // => true\n\n  $Object.isElement('<body>');\n  // => false\n  ```"
            ],
            "static": 1,
            "itemtype": "method",
            "name": "isElement",
            "params": [
                {
                    "name": "value",
                    "description": "The value to test",
                    "type": "*"
                }
            ],
            "return": {
                "description": "If value is a DOM element",
                "type": "Boolean"
            },
            "since": "@todo",
            "class": "$Object"
        },
        {
            "file": "src\\util\\Object.es6",
            "line": 291,
            "description": "Checks if value is classified as a Function object.",
            "example": [
                "\n  ```\n  $Object.isFunction(function() {});\n  // => true\n\n  $Object.isFunction(/abc/);\n  // => false\n  ```"
            ],
            "static": 1,
            "itemtype": "method",
            "name": "isFunction",
            "params": [
                {
                    "name": "value",
                    "description": "The value to test",
                    "type": "*"
                }
            ],
            "return": {
                "description": "If value is a function",
                "type": "Boolean"
            },
            "since": "@todo",
            "class": "$Object"
        },
        {
            "file": "src\\util\\Object.es6",
            "line": 311,
            "description": "Checks if value is null or undefined.",
            "example": [
                "\n  ```\n  $Object.isNil(null);\n  // => true\n\n  $Object.isNil(void 0);\n  // => true\n\n  $Object.isNil(NaN);\n  // => false\n  ```"
            ],
            "static": 1,
            "itemtype": "method",
            "name": "isNil",
            "params": [
                {
                    "name": "value",
                    "description": "The value to test",
                    "type": "*"
                }
            ],
            "return": {
                "description": "If value is nullish.",
                "type": "Boolean"
            },
            "since": "@todo",
            "class": "$Object"
        },
        {
            "file": "src\\util\\Object.es6",
            "line": 334,
            "description": "Checks if value is null.",
            "example": [
                "\n  ```\n  $Object.isNull(null);\n  // => true\n\n  $Object.isNull(void 0);\n  // => false\n  ```"
            ],
            "static": 1,
            "itemtype": "method",
            "name": "isNull",
            "params": [
                {
                    "name": "value",
                    "description": "The value to test",
                    "type": "*"
                }
            ],
            "return": {
                "description": "If value is null.",
                "type": "Boolean"
            },
            "since": "@todo",
            "class": "$Object"
        },
        {
            "file": "src\\util\\Object.es6",
            "line": 357,
            "description": "Checks if value is the language type of Object.",
            "example": [
                "\n  ```\n  $Object.isObject({});\n  // => true\n\n  $Object.isObject([1, 2, 3]);\n  // => true\n\n  $Object.isObject(function() {});\n  // => true\n\n  $Object.isObject(null);\n  // => false\n  ```"
            ],
            "static": 1,
            "itemtype": "method",
            "name": "isObject",
            "params": [
                {
                    "name": "value",
                    "description": "The value to test",
                    "type": "*"
                }
            ],
            "return": {
                "description": "If value is an object.",
                "type": "Boolean"
            },
            "since": "@todo",
            "class": "$Object"
        },
        {
            "file": "src\\util\\Object.es6",
            "line": 383,
            "description": "Checks if value is object-like.\nA value is object-like if it's not null and has a typeof result of \"object\".",
            "example": [
                "\n  ```\n  $Object.isObjectLike({});\n  // => true\n\n  $Object.isObjectLike([1, 2, 3]);\n  // => true\n\n  $Object.isObjectLike(function() {});\n  // => false\n\n  $Object.isObjectLike(null);\n  // => false\n  ```"
            ],
            "static": 1,
            "itemtype": "method",
            "name": "isObjectLike",
            "params": [
                {
                    "name": "value",
                    "description": "The value to test",
                    "type": "*"
                }
            ],
            "return": {
                "description": "If value is object-like.",
                "type": "Boolean"
            },
            "since": "@todo",
            "class": "$Object"
        },
        {
            "file": "src\\util\\Object.es6",
            "line": 410,
            "description": "Checks if value is a plain object.",
            "example": [
                "\n  ```\n  $Object.isPlainObject(new function() {}());\n  // => false\n\n  $Object.isPlainObject([1, 2, 3]);\n  // => false\n\n  $Object.isPlainObject({ x: 0, y: 0 });\n  // => true\n\n  $Object.isPlainObject(Object.create(null));\n  // => true\n  ```"
            ],
            "static": 1,
            "itemtype": "method",
            "name": "isPlainObject",
            "params": [
                {
                    "name": "value",
                    "description": "The value to test",
                    "type": "*"
                }
            ],
            "return": {
                "description": "If value is a plain object",
                "type": "Boolean"
            },
            "since": "@todo",
            "class": "$Object"
        },
        {
            "file": "src\\util\\Object.es6",
            "line": 436,
            "description": "Checks if the variable is a string.",
            "example": [
                "\n  ```\n  $Object.isString('abc');\n  // => true\n\n  $Object.isString(1);\n  // => false\n  ```"
            ],
            "static": 1,
            "itemtype": "method",
            "name": "isString",
            "params": [
                {
                    "name": "value",
                    "description": "The value to test",
                    "type": "*"
                }
            ],
            "return": {
                "description": "If value is a string",
                "type": "Boolean"
            },
            "since": "@todo",
            "class": "$Object"
        },
        {
            "file": "src\\util\\Object.es6",
            "line": 456,
            "description": "Checks if value is undefined.",
            "example": [
                "\n  ```\n  $Object.isUndefined(void 0);\n  // => true\n\n  $Object.isUndefined(null);\n  // => false\n  ```"
            ],
            "static": 1,
            "itemtype": "method",
            "name": "isUndefined",
            "params": [
                {
                    "name": "value",
                    "description": "The value to test",
                    "type": "*"
                }
            ],
            "return": {
                "description": "If value is undefined.",
                "type": "Boolean"
            },
            "since": "@todo",
            "class": "$Object"
        },
        {
            "file": "src\\util\\Object.es6",
            "line": 476,
            "description": "This method is like $Object.assign except that it recursively merges own and inherited\nenumerable string keyed properties of source objects into the destination object.\nSource properties that resolve to undefined are skipped if a destination value exists.\nArray and plain object properties are merged recursively.\nOther objects and value types are overridden by assignment.\nSource objects are applied from left to right.\nSubsequent sources overwrite property assignments of previous sources.",
            "example": [
                "\n  ```\n  // @todo\n  ```"
            ],
            "static": 1,
            "itemtype": "method",
            "name": "merge",
            "params": [
                {
                    "name": "object",
                    "description": "The destination object",
                    "type": "Object"
                },
                {
                    "name": "sources",
                    "description": "The source objects",
                    "type": "Object",
                    "multiple": true
                }
            ],
            "return": {
                "description": "The destination object with merged values",
                "type": "Object"
            },
            "since": "@todo",
            "class": "$Object"
        },
        {
            "file": "src\\util\\String.es6",
            "line": 12,
            "description": "Converts the first character of string to upper case and the remaining to lower case.",
            "example": [
                "\n  ```\n  $String('FRED').capitalize().result;\n  // => 'Fred'\n  ```"
            ],
            "itemtype": "method",
            "name": "capitalize",
            "chainable": 1,
            "since": "@todo",
            "class": "$String"
        },
        {
            "file": "src\\util\\String.es6",
            "line": 33,
            "description": "Pads string on the right side if it's shorter than length.\nPadding characters are truncated if they exceed length.",
            "example": [
                "\n  ```\n  $String('abc').padEnd(6).result;\n  // => 'abc   '\n\n  $String('abc').padEnd(6, '_-').result;\n  // => 'abc_-_'\n\n  $String('abc').padEnd(3).result;\n  // => 'abc'\n  ```"
            ],
            "itemtype": "method",
            "name": "padEnd",
            "params": [
                {
                    "name": "length",
                    "description": "The padding length",
                    "type": "String",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "chars",
                    "description": "The string used as padding",
                    "type": "String",
                    "optional": true,
                    "optdefault": "' '"
                }
            ],
            "chainable": 1,
            "since": "@todo",
            "class": "$String"
        },
        {
            "file": "src\\util\\String.es6",
            "line": 78,
            "description": "Converts the first character of string to upper case.",
            "example": [
                "\n  ```\n  $String('fred').upperFirst().result;\n  // => 'Fred'\n\n  $String('FRED').upperFirst().result;\n  // => 'FRED'\n  ```"
            ],
            "itemtype": "method",
            "name": "upperFirst",
            "chainable": 1,
            "since": "@todo",
            "class": "$String"
        },
        {
            "file": "src\\util\\String.es6",
            "line": 103,
            "description": "Converts the first character of string to upper case and the remaining to lower case.",
            "example": [
                "\n  ```\n  $String.capitalize('FRED');\n  // => 'Fred'\n  ```"
            ],
            "static": 1,
            "itemtype": "method",
            "name": "capitalize",
            "params": [
                {
                    "name": "string",
                    "description": "The string to capitalize",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The capitalized value",
                "type": "String"
            },
            "since": "@todo",
            "class": "$String"
        },
        {
            "file": "src\\util\\String.es6",
            "line": 120,
            "description": "Pads string on the right side if it's shorter than length.\nPadding characters are truncated if they exceed length.",
            "example": [
                "\n  ```\n  $String.padEnd('abc', 6);\n  // => 'abc   '\n\n  $String.padEnd('abc', 6, '_-');\n  // => 'abc_-_'\n\n  $String.padEnd('abc', 3);\n  // => 'abc'\n  ```"
            ],
            "static": 1,
            "itemtype": "method",
            "name": "padEnd",
            "params": [
                {
                    "name": "string",
                    "description": "The string to pad",
                    "type": "String"
                },
                {
                    "name": "length",
                    "description": "The padding length",
                    "type": "String",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "chars",
                    "description": "The string used as padding",
                    "type": "String",
                    "optional": true,
                    "optdefault": "' '"
                }
            ],
            "chainable": 1,
            "since": "@todo",
            "class": "$String"
        },
        {
            "file": "src\\util\\String.es6",
            "line": 148,
            "description": "Converts the first character of string to upper case.",
            "example": [
                "\n  ```\n  $String.upperFirst('fred');\n  // => 'Fred'\n\n  $String.upperFirst('FRED');\n  // => 'FRED'\n  ```"
            ],
            "static": 1,
            "itemtype": "method",
            "name": "upperFirst",
            "params": [
                {
                    "name": "string",
                    "description": "The string to convert",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The upper cased value",
                "type": "String"
            },
            "since": "@todo",
            "class": "$String"
        },
        {
            "file": "src\\EJSC.es6",
            "line": 18,
            "description": "Array of prepared functions to be called when the window loads.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "prepared",
            "type": "Array",
            "default": "[]",
            "since": "3.0.0",
            "class": "EJSC",
            "module": "EJSC"
        },
        {
            "file": "src\\EJSC.es6",
            "line": 27,
            "description": "Prepares a callback function to be called when the window loads.",
            "example": [
                "\n  ```\n  // Prepare code for EJSC to run on window load\n  EJSC.prepare(() => {\n    // Do something...\n  });\n  ```"
            ],
            "itemtype": "method",
            "name": "prepare",
            "params": [
                {
                    "name": "callback",
                    "description": "The callback function",
                    "type": "Function"
                }
            ],
            "since": "3.0.0",
            "class": "EJSC",
            "module": "EJSC"
        },
        {
            "file": "src\\EJSC.es6",
            "line": 58,
            "description": "Runs each of the prepared callback functions when the page loads.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "load",
            "since": "3.0.0",
            "class": "EJSC",
            "module": "EJSC"
        }
    ],
    "warnings": [
        {
            "message": "param name missing: {Element}",
            "line": " src\\util\\Element.es6:68"
        }
    ]
}